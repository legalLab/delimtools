[{"path":"https://legallab.github.io/delimtools/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 delimtools authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":[]},{"path":"https://legallab.github.io/delimtools/articles/install.html","id":"spider","dir":"Articles","previous_headings":"Install R packages","what":"spider","title":"Installing Species Delimitation Softwares","text":"Although listed software written using R language, spider package available CRAN, installation straightforward:","code":"install.packages(\"spider\")"},{"path":"https://legallab.github.io/delimtools/articles/install.html","id":"splits","dir":"Articles","previous_headings":"Install R packages","what":"splits","title":"Installing Species Delimitation Softwares","text":"splits package can installed using R-Forge repository. Set dependencies = TRUE install paran package.","code":"install.packages(\"splits\", repos = \"http://R-Forge.R-project.org\", dependencies = TRUE)"},{"path":"https://legallab.github.io/delimtools/articles/install.html","id":"bgmyc","dir":"Articles","previous_headings":"Install R packages","what":"bGMYC","title":"Installing Species Delimitation Softwares","text":"Although bGMYC package can installed Noah Reid’s GitHub page, recommend installing drat repository since version stable using R >= 4.x.x. running “older” bGMYC version using R >= 4.x.x, tips ultrametric tree classified distinct lineages. Thus, install “stable” version using devtools downloading tarball installing manually:","code":"install.packages(\"bGMYC\", repos = \"https://pedrosenna.github.io/drat/\")"},{"path":"https://legallab.github.io/delimtools/articles/install.html","id":"install-c-softwares","dir":"Articles","previous_headings":"","what":"Install C softwares","title":"Installing Species Delimitation Softwares","text":"instructions compile ABGD, ASAP, mPTP Unix systems. Windows user, can try use C compiler create executable files software guarantee work intended. Alternativelly, may use currently available Web servers software generate results import using respective *_tbl() functions.","code":""},{"path":"https://legallab.github.io/delimtools/articles/install.html","id":"abgd","dir":"Articles","previous_headings":"","what":"ABGD","title":"Installing Species Delimitation Softwares","text":"install ABGD, download latest release, decompress compile. Optionally, may add folder PATH environment variable move /usr/local/bin.","code":"wget https://bioinfo.mnhn.fr/abi/public/abgd/last.tgz -O abgd.tgz tar -xzvf abgd.tgz cd Abgd make mkdir bin mv abgd bin/abgd cd .."},{"path":"https://legallab.github.io/delimtools/articles/install.html","id":"asap","dir":"Articles","previous_headings":"","what":"ASAP","title":"Installing Species Delimitation Softwares","text":"install ASAP, download latest release, decompress compile. Optionally, may add folder PATH environment variable move /usr/local/bin.","code":"wget https://bioinfo.mnhn.fr/abi/public/asap/last.tgz tar -xzvf last.tgz cd ASAP make mkdir bin mv asap bin/asap cd .."},{"path":"https://legallab.github.io/delimtools/articles/install.html","id":"mptp","dir":"Articles","previous_headings":"","what":"mPTP","title":"Installing Species Delimitation Softwares","text":"install mPTP, can check mPTP repository follow instructions.","code":""},{"path":"https://legallab.github.io/delimtools/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Pedro Bittencourt. Author, maintainer, copyright holder. Rupert Collins. Author, contributor, copyright holder. Tomas Hrbek. Author, contributor.","code":""},{"path":"https://legallab.github.io/delimtools/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Bittencourt P, Collins R, Hrbek T (2025). delimtools: Helper Functions Species Delimitation Analysis. R package version 0.2.0, https://legallab.github.io/delimtools/, https://github.com/legalLab/delimtools.","code":"@Manual{,   title = {delimtools: Helper Functions for Species Delimitation Analysis},   author = {Pedro Bittencourt and Rupert Collins and Tomas Hrbek},   year = {2025},   note = {R package version 0.2.0, https://legallab.github.io/delimtools/},   url = {https://github.com/legalLab/delimtools}, }"},{"path":[]},{"path":"https://legallab.github.io/delimtools/index.html","id":"important","dir":"","previous_headings":"","what":"IMPORTANT","title":"Helper Functions for Species Delimitation Analysis","text":"software active development, assumed free bugs poor functionality. Always inspect results carefully. find problem, please report much detail possible Issues. Unfortunately ’s current form, functions (abgd_tbl(), asap_tbl() mptp_tbl()) work Windows operating systems, Unix (MacOS, Linux). third party binaries (executable programs) required. working implement importing results webservers commonly used run analyses. also difficulties installing R required package dependancies run gmyc_tbl() bgmyc_tbl() longer development available CRAN, must installed archived sources. Please refer github.com/boopsboops/delimtools-testing instructions install.","code":""},{"path":"https://legallab.github.io/delimtools/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Helper Functions for Species Delimitation Analysis","text":"official GitHub repository R package delimtools (Bittencourt et al., prep.). delimtools provides helper functions analysis single-locus species delimitation methods GMYC (Monaghan et al., 2009), bGMYC (Reid & Carstens, 2012), mPTP (Kapli et al., 2017) ASAP (Puillandre et al., 2020). software run multiple different platforms (e.g. R, Unix, webservers), also output results consistent format allow easy comparison. address shortcomings developed suite functions standardise simplify generating single-locus species delimitations.","code":""},{"path":"https://legallab.github.io/delimtools/index.html","id":"dependencies","dir":"","previous_headings":"","what":"Dependencies","title":"Helper Functions for Species Delimitation Analysis","text":"Delimtools maily depends tidyverse ggtree packages. install , run command lines : Install tidyverse: Install ggtree","code":"install.packages(\"tidyverse\") if (!require(\"BiocManager\", quietly = TRUE))     install.packages(\"BiocManager\")  BiocManager::install(\"ggtree\")"},{"path":"https://legallab.github.io/delimtools/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Helper Functions for Species Delimitation Analysis","text":"install delimtools may execute following commands. recommend usage latest CRAN release always. Latest stable version CRAN Development version GitHub: specific version via renv:","code":"install.packages(\"delimtools\") devtools::install_github(\"LegalLab/delimtools\") renv::install(\"LegalLab/delimtools@v0.1.0\")"},{"path":"https://legallab.github.io/delimtools/index.html","id":"examples","dir":"","previous_headings":"","what":"Examples","title":"Helper Functions for Species Delimitation Analysis","text":", demonstrate single-locus species delimitation analysis Geophagus eartheater cichlid dataset (Ximenes et al., 2021) using variety methods. full details please see GitHub repository accompanying R package github.com/boopsboops/delimtools-testing. Redhead Eartheater Geophagus pyrocephalus","code":"library(delimtools) library(dplyr)  # make tip label table tip.tab <- geophagus_info |>    filter(gbAccession %in% geophagus_beast@phylo$tip.label) |>   mutate(labs= glue::glue(\"{gbAccession} | {scientificName}\")) |>    select(gbAccession, labs, scientificName)  # get cols cols <- delim_brewer(delim= geophagus_delims, package=\"randomcoloR\", seed=42)  # plot delim_autoplot(delim = geophagus_delims,                 tr = geophagus_beast,                 consensus = TRUE,                n_match = 4,                delim_order = c(\"asap\",\"abgd\",\"locmin\",\"gmyc\",\"bgmyc\",\"ptp\", \"mptp\",\"morph\"),                tbl_labs = tip.tab,                 col_vec = cols,                hexpand = 0.7,                widths = c(0.5, 0.5))"},{"path":"https://legallab.github.io/delimtools/index.html","id":"current-contributors","dir":"","previous_headings":"","what":"Current contributors","title":"Helper Functions for Species Delimitation Analysis","text":"Pedro S. Bittencourt Rupert . Collins Tomas Hrbek","code":""},{"path":"https://legallab.github.io/delimtools/index.html","id":"meta","dir":"","previous_headings":"","what":"Meta","title":"Helper Functions for Species Delimitation Analysis","text":"Please report issues bugs suggestions. License: MIT. Get citation information delimtools R running citation(package='delimtools').","code":""},{"path":"https://legallab.github.io/delimtools/reference/abgd_tbl.html","id":null,"dir":"Reference","previous_headings":"","what":"A Command-Line Interface for ABGD - Automatic Barcode Gap Discovery — abgd_tbl","title":"A Command-Line Interface for ABGD - Automatic Barcode Gap Discovery — abgd_tbl","text":"abgd_tbl() returns species partition hypothesis estimated ABGD software https://bioinfo.mnhn.fr/abi/public/abgd/.","code":""},{"path":"https://legallab.github.io/delimtools/reference/abgd_tbl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A Command-Line Interface for ABGD - Automatic Barcode Gap Discovery — abgd_tbl","text":"","code":"abgd_tbl(   infile,   exe = NULL,   haps = NULL,   slope = 1.5,   model = 3,   outfolder = NULL,   webserver = NULL,   delimname = \"abgd\" )"},{"path":"https://legallab.github.io/delimtools/reference/abgd_tbl.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"A Command-Line Interface for ABGD - Automatic Barcode Gap Discovery — abgd_tbl","text":"Puillandre N., Lambert ., Brouillet S., Achaz G. 2012. ABGD, Automatic Barcode Gap Discovery primary species delimitation. Molecular Ecology 21(8):1864-77.","code":""},{"path":"https://legallab.github.io/delimtools/reference/abgd_tbl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A Command-Line Interface for ABGD - Automatic Barcode Gap Discovery — abgd_tbl","text":"infile Path fasta file. exe Path ABGD executable. haps Optional. vector haplotypes keep tbl_df. slope Numeric. Relative gap width (slope). Default 1.5. model integer specifying evolutionary model used. Available options : 0: Kimura-2P 1: Jukes-Cantor (default) 2: Tamura-Nei 3: simple distance (p-distance) outfolder Path output folder. Default NULL. specified, temporary location used. webserver .txt file containing ABGD results obtained webserver. Default NULL. delimname Character. String rename delimitation method table. Default 'abgd'.","code":""},{"path":"https://legallab.github.io/delimtools/reference/abgd_tbl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A Command-Line Interface for ABGD - Automatic Barcode Gap Discovery — abgd_tbl","text":"object class tbl_df","code":""},{"path":"https://legallab.github.io/delimtools/reference/abgd_tbl.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"A Command-Line Interface for ABGD - Automatic Barcode Gap Discovery — abgd_tbl","text":"abgd_tbl() relies system invoke ABGD software command-line interface. Hence, must software available executable file system order use function properly. abgd_tbl() saves output files outfolder imports first recursive partition file generated Environment. Alternatively, abgd_tbl() can parse .txt file obtained webserver https://bioinfo.mnhn.fr/abi/public/abgd/abgdweb.html.","code":""},{"path":"https://legallab.github.io/delimtools/reference/abgd_tbl.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"A Command-Line Interface for ABGD - Automatic Barcode Gap Discovery — abgd_tbl","text":"N. Puillandre,  . Lambert,  S. Brouillet,  G. Achaz","code":""},{"path":"https://legallab.github.io/delimtools/reference/abgd_tbl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A Command-Line Interface for ABGD - Automatic Barcode Gap Discovery — abgd_tbl","text":"","code":"# \\donttest{  #' # get path to fasta file path_to_file <- system.file(\"extdata/geophagus.fasta\", package = \"delimtools\")  # run ABGD abgd_df <- abgd_tbl(   infile = path_to_file,   exe = \"/usr/local/bin/abgd\",   model = 3,   slope = 0.5,   outfolder = NULL ) #> Error in abgd_tbl(infile = path_to_file, exe = \"/usr/local/bin/abgd\",     model = 3, slope = 0.5, outfolder = NULL): Error: Please provide a valid path to the ABGD executable file.  # check abgd_df #> Error: object 'abgd_df' not found # }"},{"path":"https://legallab.github.io/delimtools/reference/as_dwc.html","id":null,"dir":"Reference","previous_headings":"","what":"Rename Columns using Darwin Core Standard Terms — as_dwc","title":"Rename Columns using Darwin Core Standard Terms — as_dwc","text":"as_dwc() rename columns tbl_df using vector terms defined Darwin Core Standard.","code":""},{"path":"https://legallab.github.io/delimtools/reference/as_dwc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rename Columns using Darwin Core Standard Terms — as_dwc","text":"","code":"as_dwc(dwc, data, terms)"},{"path":"https://legallab.github.io/delimtools/reference/as_dwc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rename Columns using Darwin Core Standard Terms — as_dwc","text":"dwc list standard terms definitions created using get_dwc(). data tbl_df. terms vector list terms used replacement.","code":""},{"path":"https://legallab.github.io/delimtools/reference/as_dwc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rename Columns using Darwin Core Standard Terms — as_dwc","text":"object class tbl_df.","code":""},{"path":"https://legallab.github.io/delimtools/reference/as_dwc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Rename Columns using Darwin Core Standard Terms — as_dwc","text":"as_dwc() replace current column names ones defined terms. column data, Darwin Core equivalent terms must informed order user. terms column names match length terms used found Darwin Core standard, error printed Console.","code":""},{"path":"https://legallab.github.io/delimtools/reference/as_dwc.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Rename Columns using Darwin Core Standard Terms — as_dwc","text":"Pedro S. Bittencourt, Rupert . Collins.","code":""},{"path":"https://legallab.github.io/delimtools/reference/as_dwc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rename Columns using Darwin Core Standard Terms — as_dwc","text":"","code":"# get dwc terms and definitions dwc <- get_dwc(type = \"simple\")  # create a data frame with sample metadata my_df <- tibble::tibble(   species = c(\"sp1\", \"sp2\", \"sp3\"),   location = c(\"loc1\", \"loc2\", \"loc3\"),   voucher = c(\"M01\", \"M02\", \"M03\"),   collector = c(\"John\", \"Robert\", \"David\") )  # rename columns as_dwc(dwc, my_df, terms = c(\"scientificName\", \"locality\", \"catalogNumber\", \"recordedBy\")) #> # A tibble: 3 × 4 #>   scientificName locality catalogNumber recordedBy #>   <chr>          <chr>    <chr>         <chr>      #> 1 sp1            loc1     M01           John       #> 2 sp2            loc2     M02           Robert     #> 3 sp3            loc3     M03           David"},{"path":"https://legallab.github.io/delimtools/reference/asap_tbl.html","id":null,"dir":"Reference","previous_headings":"","what":"A Command-Line Interface for ASAP - Assemble Species by Automatic Partitioning — asap_tbl","title":"A Command-Line Interface for ASAP - Assemble Species by Automatic Partitioning — asap_tbl","text":"asap_tbl() returns species partition hypothesis estimated ASAP software https://bioinfo.mnhn.fr/abi/public/asap/.","code":""},{"path":"https://legallab.github.io/delimtools/reference/asap_tbl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A Command-Line Interface for ASAP - Assemble Species by Automatic Partitioning — asap_tbl","text":"","code":"asap_tbl(   infile,   exe = NULL,   haps = NULL,   model = 3,   outfolder = NULL,   webserver = NULL,   delimname = \"asap\" )"},{"path":"https://legallab.github.io/delimtools/reference/asap_tbl.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"A Command-Line Interface for ASAP - Assemble Species by Automatic Partitioning — asap_tbl","text":"Puillandre N., Brouillet S., Achaz G. 2021. ASAP: assemble species automatic partitioning. Molecular Ecology Resources 21:609–620.","code":""},{"path":"https://legallab.github.io/delimtools/reference/asap_tbl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A Command-Line Interface for ASAP - Assemble Species by Automatic Partitioning — asap_tbl","text":"infile Path fasta file. exe Path ASAP executable. haps Optional. vector haplotypes keep tbl_df. model integer specifying evolutionary model used. Available options : 0: Kimura-2P 1: Jukes-Cantor (default) 2: Tamura-Nei 3: simple distance (p-distance) outfolder Path output folder. Default NULL. specified, temporary location used. webserver .csv file containing ASAP results obtained webserver. Default NULL. delimname Character. String rename delimitation method table. Default 'asap'.","code":""},{"path":"https://legallab.github.io/delimtools/reference/asap_tbl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A Command-Line Interface for ASAP - Assemble Species by Automatic Partitioning — asap_tbl","text":"object class tbl_df","code":""},{"path":"https://legallab.github.io/delimtools/reference/asap_tbl.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"A Command-Line Interface for ASAP - Assemble Species by Automatic Partitioning — asap_tbl","text":"asap_tbl() relies system invoke ASAP software command-line interface. Hence, must software available executable file system order use function properly. asap_tbl() saves output files outfolder imports first partition file generated Environment. Alternatively, asap_tbl() can parse .csv file obtained webserver https://bioinfo.mnhn.fr/abi/public/asap/asapweb.html.","code":""},{"path":"https://legallab.github.io/delimtools/reference/asap_tbl.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"A Command-Line Interface for ASAP - Assemble Species by Automatic Partitioning — asap_tbl","text":"Nicolas Puillandre, Sophie Brouillet, Guillaume Achaz.","code":""},{"path":"https://legallab.github.io/delimtools/reference/asap_tbl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A Command-Line Interface for ASAP - Assemble Species by Automatic Partitioning — asap_tbl","text":"","code":"# \\donttest{  #' # get path to fasta file path_to_file <- system.file(\"extdata/geophagus.fasta\", package = \"delimtools\")  # run ASAP asap_df <- asap_tbl(infile = path_to_file, exe= \"/usr/local/bin/asap\", model= 3) #> Error in asap_tbl(infile = path_to_file, exe = \"/usr/local/bin/asap\",     model = 3): Error: Please provide a valid path to the ASAP executable file.  # check asap_df #> Error: object 'asap_df' not found  # }"},{"path":"https://legallab.github.io/delimtools/reference/bgmyc_tbl.html","id":null,"dir":"Reference","previous_headings":"","what":"Turns bGMYC Results Into a Tibble — bgmyc_tbl","title":"Turns bGMYC Results Into a Tibble — bgmyc_tbl","text":"bgmyc_tbl() processes output bgmyc.singlephy object class tbl_df.","code":""},{"path":"https://legallab.github.io/delimtools/reference/bgmyc_tbl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Turns bGMYC Results Into a Tibble — bgmyc_tbl","text":"","code":"bgmyc_tbl(bgmyc_res, ppcutoff = 0.05, delimname = \"bgmyc\")"},{"path":"https://legallab.github.io/delimtools/reference/bgmyc_tbl.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Turns bGMYC Results Into a Tibble — bgmyc_tbl","text":"Reid N.M., Carstens B.C. 2012. Phylogenetic estimation error can decrease accuracy species delimitation: Bayesian implementation general mixed Yule-coalescent model. BMC Evolutionary Biology 12 (196).","code":""},{"path":"https://legallab.github.io/delimtools/reference/bgmyc_tbl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Turns bGMYC Results Into a Tibble — bgmyc_tbl","text":"bgmyc_res Output bgmyc.singlephy. ppcutoff Posterior probability threshold clustering samples species partitions. See bgmyc.point details. Default 0.05. delimname Character. String rename delimitation method table. Default 'bgmyc'.","code":""},{"path":"https://legallab.github.io/delimtools/reference/bgmyc_tbl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Turns bGMYC Results Into a Tibble — bgmyc_tbl","text":"object class tbl_df.","code":""},{"path":"https://legallab.github.io/delimtools/reference/bgmyc_tbl.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Turns bGMYC Results Into a Tibble — bgmyc_tbl","text":"bGMYC package uses spec.probmat create matrix probability conspecificity bgmyc.point split samples list individuals meets threshold specified ppcutoff. bgmyc_tbl() wraps two functions single one turns inputs tibble matches output gmyc_tbl locmin_tbl.","code":""},{"path":"https://legallab.github.io/delimtools/reference/bgmyc_tbl.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Turns bGMYC Results Into a Tibble — bgmyc_tbl","text":"Noah M. Reid.","code":""},{"path":"https://legallab.github.io/delimtools/reference/bgmyc_tbl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Turns bGMYC Results Into a Tibble — bgmyc_tbl","text":"","code":"# \\donttest{ # run bGMYC bgmyc_res <- bGMYC::bgmyc.singlephy(ape::as.phylo(geophagus_beast),   mcmc = 11000,   burnin = 1000,   thinning = 100,   t1 = 2,   t2 = ape::Ntip(geophagus_beast),   start = c(1, 0.5, 50) ) #> You are running bGMYC on a single phylogenetic tree. #> This tree contains  137  tips. #> The Yule process rate change parameter has a uniform prior ranging from  0  to  2 . #> The coalescent process rate change parameter has a uniform prior ranging from  0  to  2 . #> The threshold parameter, which is equal to the number of species, has a uniform prior ranging from  2  to  137 . The upper bound of this prior should not be more than the number of tips in your trees. #> The MCMC will start with the Yule parameter set to  1 . #> The MCMC will start with the coalescent parameter set to  0.5 . #> The MCMC will start with the threshold parameter set to  50 . If this number is greater than the number of tips in your tree, an error will result. #> Given your settings for mcmc, burnin and thinning, your analysis will result in  100  samples being retained. #> 10 %  #> 20 %  #> 30 %  #> 40 %  #> 50 %  #> 60 %  #> 80 %  #> 90 %  #> 100 %  #> acceptance rates  #>  py pc th  #>  0.5518182 0.5462727 0.2234545   # create a tibble bgmyc_df <- bgmyc_tbl(bgmyc_res, ppcutoff = 0.05)  # check bgmyc_df #> # A tibble: 137 × 2 #>    labels     bgmyc #>    <chr>      <int> #>  1 GU701784.1     1 #>  2 GU701785.1     1 #>  3 JN988869.1     1 #>  4 MH780911.1     1 #>  5 OR732927.1     1 #>  6 OR732928.1     1 #>  7 MZ050845.1     2 #>  8 MZ051032.1     2 #>  9 MZ051706.1     2 #> 10 MZ051794.1     2 #> # ℹ 127 more rows # }"},{"path":"https://legallab.github.io/delimtools/reference/boot_dna.html","id":null,"dir":"Reference","previous_headings":"","what":"Boostrapping DNA sequences — boot_dna","title":"Boostrapping DNA sequences — boot_dna","text":"boot_dna() generates random bootstrap alignments confidence interval estimation using confidence_intervals. Thus, meant internal function package.","code":""},{"path":"https://legallab.github.io/delimtools/reference/boot_dna.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Boostrapping DNA sequences — boot_dna","text":"","code":"boot_dna(dna, block = 1)"},{"path":"https://legallab.github.io/delimtools/reference/boot_dna.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Boostrapping DNA sequences — boot_dna","text":"dna object class DNAbin. block integer. Number columns resampled together. Default 1.","code":""},{"path":"https://legallab.github.io/delimtools/reference/boot_dna.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Boostrapping DNA sequences — boot_dna","text":"DNAbin object.","code":""},{"path":"https://legallab.github.io/delimtools/reference/boot_dna.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Boostrapping DNA sequences — boot_dna","text":"Pedro S. Bittencourt","code":""},{"path":"https://legallab.github.io/delimtools/reference/boot_dna.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Boostrapping DNA sequences — boot_dna","text":"","code":"boot <- boot_dna(geophagus)"},{"path":"https://legallab.github.io/delimtools/reference/check_delim.html","id":null,"dir":"Reference","previous_headings":"","what":"Checks If Two or More Species Delimitation Outputs are (Nearly) Equal — check_delim","title":"Checks If Two or More Species Delimitation Outputs are (Nearly) Equal — check_delim","text":"check_delim() checks two species delimitation outputs differences dimensions, labels, values.","code":""},{"path":"https://legallab.github.io/delimtools/reference/check_delim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Checks If Two or More Species Delimitation Outputs are (Nearly) Equal — check_delim","text":"","code":"check_delim(list)"},{"path":"https://legallab.github.io/delimtools/reference/check_delim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Checks If Two or More Species Delimitation Outputs are (Nearly) Equal — check_delim","text":"list list containing two species delimitation outputs check.","code":""},{"path":"https://legallab.github.io/delimtools/reference/check_delim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Checks If Two or More Species Delimitation Outputs are (Nearly) Equal — check_delim","text":"single logical value, TRUE FALSE.","code":""},{"path":"https://legallab.github.io/delimtools/reference/check_delim.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Checks If Two or More Species Delimitation Outputs are (Nearly) Equal — check_delim","text":"check_delim() check two species delimitation outputs different dimensions (rows, columns), labels duplicated absent labels, NA values partitions set using non numeric values. TRUE cases listed , check_delim() return error.","code":""},{"path":"https://legallab.github.io/delimtools/reference/check_delim.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Checks If Two or More Species Delimitation Outputs are (Nearly) Equal — check_delim","text":"Pedro S. Bittencourt, Rupert . Collins.","code":""},{"path":"https://legallab.github.io/delimtools/reference/check_delim.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Checks If Two or More Species Delimitation Outputs are (Nearly) Equal — check_delim","text":"","code":"# create dummy delimitation outputs delim_1 <- tibble::tibble(   labels = paste0(\"seq\", 1:10),   method_A = c(rep(1, 5), rep(2, 5)) )  delim_2 <- tibble::tibble(   labels = paste0(\"seq\", 1:10),   method_B = c(rep(1, 3), rep(2, 2), rep(3, 5)) )  delim_3 <- tibble::tibble(   labels = paste0(\"seq\", 1:10),   method_C = c(rep(1, 3), rep(2, 2), rep(3, 3), rep(4, 2)) )  # check outputs check_delim(list(delim_1, delim_2, delim_3)) #> Checking species delimitation tables... #> Checking table 1 against table 2... #> Checking table 1 against table 3... #> Checking table 1 against table 3... #> ✔ Checking complete! #> Checking table 1 against table 3... #> Checking table 1 against table 3... #> [1] TRUE"},{"path":"https://legallab.github.io/delimtools/reference/check_identifiers.html","id":null,"dir":"Reference","previous_headings":"","what":"Checks for Differences Between Identifiers in Metadata and DNA Sequence Files — check_identifiers","title":"Checks for Differences Between Identifiers in Metadata and DNA Sequence Files — check_identifiers","text":"check_identifiers() checks differences identifiers metadata DNA sequence files.","code":""},{"path":"https://legallab.github.io/delimtools/reference/check_identifiers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Checks for Differences Between Identifiers in Metadata and DNA Sequence Files — check_identifiers","text":"","code":"check_identifiers(data, identifier, dna)"},{"path":"https://legallab.github.io/delimtools/reference/check_identifiers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Checks for Differences Between Identifiers in Metadata and DNA Sequence Files — check_identifiers","text":"data object class tbl_df containing sequence metadata. identifier column data contains sequence identifiers. dna DNAbin object.","code":""},{"path":"https://legallab.github.io/delimtools/reference/check_identifiers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Checks for Differences Between Identifiers in Metadata and DNA Sequence Files — check_identifiers","text":"list containing erroneus identifiers metadata sequence file.","code":""},{"path":"https://legallab.github.io/delimtools/reference/check_identifiers.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Checks for Differences Between Identifiers in Metadata and DNA Sequence Files — check_identifiers","text":"check_identifiers() helper function check inconsistencies identifiers metadata DNA sequences files, absence, mistyping, duplicated entries, differences size lengths. problems found, warnings appear Console corrections made prevent unintended consequences later. list containing erroneous identifiers returned invisibly.","code":""},{"path":"https://legallab.github.io/delimtools/reference/check_identifiers.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Checks for Differences Between Identifiers in Metadata and DNA Sequence Files — check_identifiers","text":"Pedro S. Bittencourt, Rupert . Collins.","code":""},{"path":"https://legallab.github.io/delimtools/reference/check_identifiers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Checks for Differences Between Identifiers in Metadata and DNA Sequence Files — check_identifiers","text":"","code":"check_identifiers(geophagus_info, \"gbAccession\", geophagus) #> ✔ Identifiers are the same across files."},{"path":"https://legallab.github.io/delimtools/reference/clean_dna.html","id":null,"dir":"Reference","previous_headings":"","what":"Removes Gaps, Ambiguities and Missing Data from DNA Sequences — clean_dna","title":"Removes Gaps, Ambiguities and Missing Data from DNA Sequences — clean_dna","text":"clean_dna() removes character valid ACTG base DNAbin object.","code":""},{"path":"https://legallab.github.io/delimtools/reference/clean_dna.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Removes Gaps, Ambiguities and Missing Data from DNA Sequences — clean_dna","text":"","code":"clean_dna(dna, verbose = TRUE)"},{"path":"https://legallab.github.io/delimtools/reference/clean_dna.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Removes Gaps, Ambiguities and Missing Data from DNA Sequences — clean_dna","text":"dna object class DNAbin. verbose logical. Returns warning sequence contains non ACTG bases.","code":""},{"path":"https://legallab.github.io/delimtools/reference/clean_dna.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Removes Gaps, Ambiguities and Missing Data from DNA Sequences — clean_dna","text":"object class DNAbin.","code":""},{"path":"https://legallab.github.io/delimtools/reference/clean_dna.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Removes Gaps, Ambiguities and Missing Data from DNA Sequences — clean_dna","text":"clean_dna() detects removes non ACTG bases alignment. includes: \"N\", \"-\", \"?\", \"R\", \"Y\", etc. verbose = TRUE, returns warning characters inside sequences, .e, alignment padding chars ends.","code":""},{"path":"https://legallab.github.io/delimtools/reference/clean_dna.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Removes Gaps, Ambiguities and Missing Data from DNA Sequences — clean_dna","text":"Rupert . Collins","code":""},{"path":"https://legallab.github.io/delimtools/reference/clean_dna.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Removes Gaps, Ambiguities and Missing Data from DNA Sequences — clean_dna","text":"","code":"geo_clean <- clean_dna(geophagus) #> Warning: ⚠ You have missing data \"('N','-' '?')\" or ambiguity inside your sequence, i.e. #> not padding the ends, and this may have unintended consequences later, as they #> have now been removed! #> ℹ The names of the samples are bellow. #> GU701784.1, GU701785.1"},{"path":"https://legallab.github.io/delimtools/reference/collapse_others.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarise Haplotype Metadata Down to One Row — collapse_others","title":"Summarise Haplotype Metadata Down to One Row — collapse_others","text":"collapse_others() returns tbl_df summarising unique haplotype frequencies, duplicates selected metadata single row.","code":""},{"path":"https://legallab.github.io/delimtools/reference/collapse_others.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarise Haplotype Metadata Down to One Row — collapse_others","text":"","code":"collapse_others(data, hap_tbl, labels, cols)"},{"path":"https://legallab.github.io/delimtools/reference/collapse_others.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarise Haplotype Metadata Down to One Row — collapse_others","text":"data object class tbl_df containing sequence metadata. hap_tbl Output haplotype_tbl. labels Column name contains sequence names. cols character vector variables collapse.","code":""},{"path":"https://legallab.github.io/delimtools/reference/collapse_others.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarise Haplotype Metadata Down to One Row — collapse_others","text":"object class tbl_df.","code":""},{"path":"https://legallab.github.io/delimtools/reference/collapse_others.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Summarise Haplotype Metadata Down to One Row — collapse_others","text":"collapse_others() helper function summarise metadata along haplotype_tbl. given cols, collapse_others() flattens content unique haplotypes duplicates hap_tbl.","code":""},{"path":"https://legallab.github.io/delimtools/reference/collapse_others.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Summarise Haplotype Metadata Down to One Row — collapse_others","text":"Pedro S. Bittencourt, Rupert . Collins.","code":""},{"path":"https://legallab.github.io/delimtools/reference/collapse_others.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarise Haplotype Metadata Down to One Row — collapse_others","text":"","code":"# summarise haplotypes hap_tbl <- haplotype_tbl(geophagus) #> Warning: ⚠ You have missing data \"('N','-' '?')\" or ambiguity inside your sequence, i.e. #> not padding the ends, and this may have unintended consequences later, as they #> have now been removed! #> ℹ The names of the samples are bellow. #> GU701784.1, GU701785.1  # summarise country others_df <- collapse_others(geophagus_info, hap_tbl, \"gbAccession\", \"country\")"},{"path":"https://legallab.github.io/delimtools/reference/confidence_intervals.html","id":null,"dir":"Reference","previous_headings":"","what":"Confidence Intervals for Species Delimitations Methods — confidence_intervals","title":"Confidence Intervals for Species Delimitations Methods — confidence_intervals","text":"functions compute confidence intervals various species delimitation methods, including GMYC, bGMYC, Local Minima, mPTP.","code":""},{"path":"https://legallab.github.io/delimtools/reference/confidence_intervals.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Confidence Intervals for Species Delimitations Methods — confidence_intervals","text":"","code":"gmyc_ci(tr, posterior, method = \"single\", interval = c(0, 5))  bgmyc_ci(   tr,   posterior,   ppcutoff = 0.05,   mcmc,   burnin,   thinning,   py1 = 0,   py2 = 2,   pc1 = 0,   pc2 = 2,   t1 = 2,   t2 = 51,   scale = c(20, 10, 5),   start = c(1, 0.5, 50) )  locmin_ci(dna, block = 1, reps = 100, threshold = 0.01, haps = NULL, ...)  mptp_ci(   infile,   bootstraps,   exe = NULL,   outfolder = NULL,   method = c(\"multi\", \"single\"),   minbrlen = 1e-04,   webserver = NULL )"},{"path":"https://legallab.github.io/delimtools/reference/confidence_intervals.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Confidence Intervals for Species Delimitations Methods — confidence_intervals","text":"tr ultrametric, dichotomous tree object ape format. posterior Trees posterior. object class multiphylo. method Method analysis, either \"single\" single-threshold version \"multiple\" multiple-threshold version. interval Upper lower limit estimation scaling parameters, e.g. c(0,10) ppcutoff Posterior probability threshold clustering samples species partitions. See bgmyc.point details. Default 0.05. mcmc number samples take Markov Chain burnin number samples discard burn-thinning interval samples retained Markov Chain py1 governs prior Yule (speciation) rate change parameter. using default prior distribution, lower bound uniform distribution. can influential prior three. rate change parameterized n^py n number lineages waiting interval (see Pons et al. 2006). 50 sequences analysis Yule rate change parameter 2, allows potential 50-fold increase speciation rate. unrealistic parameter value can cause threshold Yule Coalescent process difficult distinguish. reasonable upper bound prior probably less 1.5 (potential 7-fold increase). modify prior function use different distribution entirely. py2 governs prior Yule rate change parameter. using default prior distribution, upper bound uniform distribution. pc1 governs prior coalescent rate change parameter. using default prior distribution, lower bound uniform distribution. rate change parameterized (n(n-1))^pc n number lineages waiting interval (see Pons et al. 2006). principle pc can interpreted change effective population size (pc<1 decline, pc>1 growth) identical haplotypes must excluded analysis accurate biological interpretation possible. pc2 governs prior coalescent rate change parameter. using default prior distribution, upper bound uniform distribution. t1 governs prior threshold parameter. lower bound uniform distribution. bounds uniform distribution 1 greater number unique haplotypes analysis. t2 governs prior threshold parameter. upper bound uniform distribution scale vector scale parameters governing proposal distributions markov chain. first Yule coalescent rate change parameters. increasing makes proposals conservative. third threshold parameter. increasing makes proposals liberal. start vector starting parameters order scale parameters, py, pc, t. t may need set impossible given dataset. dna object class DNAbin. block integer. Number columns resampled together. Default 1. reps Number bootstrap replicates. Default 100. threshold Distance cutoff clustering. Default 0.01. See localMinima details. haps Optional. vector haplotypes keep tbl_df. ... arguments passed dist.dna. infile Path tree file Newick format. dichotomous rooted. bootstraps Bootstrap trees. object class multiphylo. exe Path mPTP executable. outfolder Path output folder. Default NULL. specified, temporary location used. minbrlen Numeric. Branch lengths smaller equal value provided ignored computations. Default 0.0001. Use min_brlenfor fine tuning. webserver .txt file containing mPTP results obtained webserver. Default NULL.","code":""},{"path":"https://legallab.github.io/delimtools/reference/confidence_intervals.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Confidence Intervals for Species Delimitations Methods — confidence_intervals","text":"vector containing number species partitions tr, dna infile followed number partitions posterior, reps bootstraps.","code":""},{"path":"https://legallab.github.io/delimtools/reference/confidence_intervals.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Confidence Intervals for Species Delimitations Methods — confidence_intervals","text":"gmyc_ci bgmyc_ci can take long time proccess, depending many posterior trees provided. alternative, analyses can sped significantly running parallel using plan.","code":""},{"path":"https://legallab.github.io/delimtools/reference/confidence_intervals.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Confidence Intervals for Species Delimitations Methods — confidence_intervals","text":"Pedro S. Bittencourt, Rupert . Collins.","code":""},{"path":"https://legallab.github.io/delimtools/reference/confidence_intervals.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Confidence Intervals for Species Delimitations Methods — confidence_intervals","text":"","code":"# \\donttest{  # gmyc confidence intervals  # compute values using multisession mode {   future::plan(\"multisession\")    gmyc_res <- gmyc_ci(ape::as.phylo(geophagus_beast), geophagus_posterior)    # reset future parameters   future::plan(\"sequential\") }  # plot distribution plot(density(gmyc_res))   # tabulate tibble::tibble(   method = \"gmyc\",   point_estimate = gmyc_res[1],   CI_95 = as.integer(quantile(gmyc_res[-1], probs = c(0.025, 0.975))) |>     stringr::str_flatten(collapse = \"-\"),   CI_mean = as.integer(mean(gmyc_res[-1])),   CI_median = as.integer(stats::median(gmyc_res[-1])) ) #> # A tibble: 1 × 5 #>   method point_estimate CI_95 CI_mean CI_median #>   <chr>           <int> <chr>   <int>     <int> #> 1 gmyc               21 3-43       25        23 # }"},{"path":"https://legallab.github.io/delimtools/reference/delim_autoplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Phylogenetic Trees With Species Delimitation Partitions — delim_autoplot","title":"Plot Phylogenetic Trees With Species Delimitation Partitions — delim_autoplot","text":"delim_autoplot() returns phylogenetic tree plotted using ggtree alongside customized tile plot using geom_tile combined wrap_plots.","code":""},{"path":"https://legallab.github.io/delimtools/reference/delim_autoplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Phylogenetic Trees With Species Delimitation Partitions — delim_autoplot","text":"","code":"delim_autoplot(   delim,   tr,   consensus = TRUE,   n_match = NULL,   delim_order = NULL,   tbl_labs = NULL,   col_vec = NULL,   hexpand = 0.1,   widths = c(0.5, 0.2) )"},{"path":"https://legallab.github.io/delimtools/reference/delim_autoplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Phylogenetic Trees With Species Delimitation Partitions — delim_autoplot","text":"delim Output delim_join. tr treedata object. phylogram ultrametric trees supported. consensus Logical. majority-vote consensus estimated? n_match Integer. consensus = TRUE, threshold majority-vote calculations. See delim_consensus details. delim_order character vector species delimitation names ordered user. Default NULL. tbl_labs tbl_df customized labels tree plotting. first column must match tip labels tr object, second column customized labels. col_vec color vector species delimitation partitions. See delim_brewer customized color palette options. hexpand Numeric. Expand xlim tree ratio x axis range. Useful tiplabels become truncated plotting. Default 0.1. widths numeric vector containing relative widths tree species delimitation bars. See wrap_plots details. Defaults c(0.5, 0.2).","code":""},{"path":"https://legallab.github.io/delimtools/reference/delim_autoplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Phylogenetic Trees With Species Delimitation Partitions — delim_autoplot","text":"patchwork object.","code":""},{"path":"https://legallab.github.io/delimtools/reference/delim_autoplot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot Phylogenetic Trees With Species Delimitation Partitions — delim_autoplot","text":"delim_autoplot() wrapper tree plotting associated data implemented using ggtree, ggplot2, patchwork. consensus = TRUE, consensus bar plotted next species delimitation plot, summarizing partitions across samples. consensus reached, \"X\" plotted instead.","code":""},{"path":"https://legallab.github.io/delimtools/reference/delim_autoplot.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot Phylogenetic Trees With Species Delimitation Partitions — delim_autoplot","text":"Pedro S. Bittencourt, Rupert . Collins.","code":""},{"path":"https://legallab.github.io/delimtools/reference/delim_autoplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Phylogenetic Trees With Species Delimitation Partitions — delim_autoplot","text":"","code":"# view partitions using an ultrametric tree p <- delim_autoplot(geophagus_delims, geophagus_beast) #> Warning: ⚠ Argument `tbl_labs` not provided. Using tiplabels instead. #> Warning: ⚠ Argument `delim_order` not provided. Using default order from #> `geophagus_delims`. #> Warning: ⚠ Argument `col_vec` not provided. Customizing one using `delim_brewer()`. #> ℹ Please use `delimtools::delim_brewer()` to create even better colour #>   palettes! #> Warning: ⚠ `n_match` was not found. Using `n_match= 4` instead. p   # view partitions using a phylogram p1 <- delim_autoplot(geophagus_delims, geophagus_raxml) #> Warning: ⚠ Argument `tbl_labs` not provided. Using tiplabels instead. #> Warning: ⚠ Argument `delim_order` not provided. Using default order from #> `geophagus_delims`. #> Warning: ⚠ Argument `col_vec` not provided. Customizing one using `delim_brewer()`. #> ℹ Please use `delimtools::delim_brewer()` to create even better colour #>   palettes! #> Warning: ⚠ `n_match` was not found. Using `n_match= 4` instead."},{"path":"https://legallab.github.io/delimtools/reference/delim_autoplot2.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Phylogenetic Trees With Species Delimitation Partitions — delim_autoplot2","title":"Plot Phylogenetic Trees With Species Delimitation Partitions — delim_autoplot2","text":"delim_autoplot2() returns phylogenetic tree plotted using ggtree alongside customized tile plot using geom_tile combined wrap_plots.","code":""},{"path":"https://legallab.github.io/delimtools/reference/delim_autoplot2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Phylogenetic Trees With Species Delimitation Partitions — delim_autoplot2","text":"","code":"delim_autoplot2(   delim,   tr,   consensus = TRUE,   n_match = NULL,   delim_order = NULL,   tbl_labs,   species,   hexpand = 0.1,   widths = c(0.5, 0.2) )"},{"path":"https://legallab.github.io/delimtools/reference/delim_autoplot2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Phylogenetic Trees With Species Delimitation Partitions — delim_autoplot2","text":"delim Output delim_join. tr treedata object. phylogram ultrametric trees supported. consensus Logical. majority-vote consensus estimated? n_match Integer. consensus = TRUE, threshold majority-vote calculations. See delim_consensus details. delim_order character vector species delimitation names ordered user. Default NULL. tbl_labs tbl_df customized labels tree plotting. first column must match tip labels tr object, second column customized labels. species column name tbl_labs contains species names tip tree. hexpand Numeric. Expand xlim tree ratio x axis range. Useful tiplabels become truncated plotting. Default 0.1. widths numeric vector containing relative widths tree species delimitation bars. See wrap_plots details. Defaults c(0.5, 0.2).","code":""},{"path":"https://legallab.github.io/delimtools/reference/delim_autoplot2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Phylogenetic Trees With Species Delimitation Partitions — delim_autoplot2","text":"patchwork object.","code":""},{"path":"https://legallab.github.io/delimtools/reference/delim_autoplot2.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot Phylogenetic Trees With Species Delimitation Partitions — delim_autoplot2","text":"delim_autoplot2() wrapper tree plotting associated data implemented using ggtree, ggplot2, patchwork. consensus = TRUE, consensus bar plotted next species delimitation plot, summarizing partitions across samples. consensus reached, \"X\" plotted instead. function modified version delim_autoplot plots species partitions using black grey color scheme.","code":""},{"path":"https://legallab.github.io/delimtools/reference/delim_autoplot2.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Plot Phylogenetic Trees With Species Delimitation Partitions — delim_autoplot2","text":"Pedro S. Bittencourt, Rupert . Collins.","code":""},{"path":"https://legallab.github.io/delimtools/reference/delim_autoplot2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Phylogenetic Trees With Species Delimitation Partitions — delim_autoplot2","text":"","code":"# create labels labs <- geophagus_info |> dplyr::select(gbAccession, scientificName)  # view partitions using an ultrametric tree p <- delim_autoplot2(geophagus_delims,   geophagus_beast,   tbl_labs = labs,   species = \"scientificName\" ) #> Warning: Argument `delim_order` not provided. Using default order from `delim`. #> Warning: ⚠ `n_match` was not found. Using `n_match= 5` instead. p   # view partitions using a phylogram p1 <- delim_autoplot2(geophagus_delims,   geophagus_raxml,   tbl_labs = labs,   species = \"scientificName\" ) #> Warning: Argument `delim_order` not provided. Using default order from `delim`. #> Warning: ⚠ `n_match` was not found. Using `n_match= 5` instead."},{"path":"https://legallab.github.io/delimtools/reference/delim_brewer.html","id":null,"dir":"Reference","previous_headings":"","what":"Customize Delimitation Colors — delim_brewer","title":"Customize Delimitation Colors — delim_brewer","text":"delim_brewer() returns set colors created interpolating using color palettes RColorBrewer, viridisLite randomcoloR.","code":""},{"path":"https://legallab.github.io/delimtools/reference/delim_brewer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Customize Delimitation Colors — delim_brewer","text":"","code":"delim_brewer(delim, package = NULL, palette = NULL, seed = NULL)"},{"path":"https://legallab.github.io/delimtools/reference/delim_brewer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Customize Delimitation Colors — delim_brewer","text":"delim Output delim_join. package Package contains color palettes. Available options \"RColorBrewer\", \"viridisLite\" \"randomcoloR\". palette palette name. brewer.pal RColorBrewer viridis viridisLite options. seed Integer. Number initialize random number generator.","code":""},{"path":"https://legallab.github.io/delimtools/reference/delim_brewer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Customize Delimitation Colors — delim_brewer","text":"character vector hexadecimal color codes.","code":""},{"path":"https://legallab.github.io/delimtools/reference/delim_brewer.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Customize Delimitation Colors — delim_brewer","text":"delim_brewer() interpolates color palette returns vector random colors whose length equal sum unique species delimitation partitions delim. reproducibility, make sure provide seed. provided, Sys.time used seed instead. One also try different seeds get best color combinations plotting.","code":""},{"path":"https://legallab.github.io/delimtools/reference/delim_brewer.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Customize Delimitation Colors — delim_brewer","text":"Rupert . Collins, Pedro S. Bittencourt","code":""},{"path":"https://legallab.github.io/delimtools/reference/delim_brewer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Customize Delimitation Colors — delim_brewer","text":"","code":"# create a vector of colors cols <- delim_brewer(geophagus_delims, package = \"randomcoloR\") #> Warning: ⚠ Argument `seed` not found. Using `Sys.time()` as seed. #> ℹ For reproducibility, you may want to set a custom `seed` instead. `seed` is #>   printed below: #> 2025-03-30 05:32:06.807155"},{"path":"https://legallab.github.io/delimtools/reference/delim_consensus.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate a Majority-Vote Consensus — delim_consensus","title":"Estimate a Majority-Vote Consensus — delim_consensus","text":"delim_consensus() estimates majority-vote consensus output delim_join row-wise manner.","code":""},{"path":"https://legallab.github.io/delimtools/reference/delim_consensus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate a Majority-Vote Consensus — delim_consensus","text":"","code":"delim_consensus(delim, n_match = NULL)"},{"path":"https://legallab.github.io/delimtools/reference/delim_consensus.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate a Majority-Vote Consensus — delim_consensus","text":"delim Output delim_join. n_match integer. Threshold Majority-Vote calculations. specified, returns warning threshold defined ceiling(ncol(delim[, -1])/2).","code":""},{"path":"https://legallab.github.io/delimtools/reference/delim_consensus.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate a Majority-Vote Consensus — delim_consensus","text":"object class tbl_df.","code":""},{"path":"https://legallab.github.io/delimtools/reference/delim_consensus.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimate a Majority-Vote Consensus — delim_consensus","text":"delim_consensus() iterates row--row, counting number matching species partition names across species delimitations methods delim_join output. sum identical partition names greater equal n_match, consensus column filled partition name. Otherwise, consensus column filled NA.","code":""},{"path":"https://legallab.github.io/delimtools/reference/delim_consensus.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Estimate a Majority-Vote Consensus — delim_consensus","text":"Pedro S. Bittencourt","code":""},{"path":"https://legallab.github.io/delimtools/reference/delim_consensus.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate a Majority-Vote Consensus — delim_consensus","text":"","code":"# estimate a majority vote consensus delim_consensus <- delim_consensus(geophagus_delims, n_match= 5)  # check delim_consensus #> # A tibble: 137 × 10 #>    labels     abgd  asap  bgmyc gmyc  locmin morph mptp  ptp   consensus #>    <chr>      <chr> <chr> <chr> <chr> <chr>  <chr> <chr> <chr> <chr>     #>  1 MZ504301.1 sp1   sp20  sp1   sp1   sp1    sp37  sp38  sp1   sp1       #>  2 MZ504318.1 sp1   sp20  sp1   sp1   sp1    sp37  sp38  sp1   sp1       #>  3 MZ504341.1 sp1   sp20  sp1   sp1   sp1    sp37  sp38  sp1   sp1       #>  4 MZ504337.1 sp1   sp20  sp1   sp1   sp1    sp37  sp38  sp1   sp1       #>  5 MZ504342.1 sp1   sp20  sp1   sp1   sp1    sp37  sp38  sp1   sp1       #>  6 MZ504304.1 sp1   sp20  sp1   sp1   sp1    sp37  sp38  sp1   sp1       #>  7 MZ504332.1 sp1   sp20  sp1   sp1   sp1    sp37  sp38  sp1   sp1       #>  8 MZ504343.1 sp1   sp20  sp1   sp1   sp1    sp37  sp38  sp1   sp1       #>  9 MZ504315.1 sp1   sp20  sp1   sp1   sp1    sp37  sp38  sp1   sp1       #> 10 MZ504345.1 sp1   sp20  sp1   sp1   sp1    sp37  sp38  sp1   sp1       #> # ℹ 127 more rows"},{"path":"https://legallab.github.io/delimtools/reference/delim_join.html","id":null,"dir":"Reference","previous_headings":"","what":"Join Multiple Species Delimitation Methods Outputs — delim_join","title":"Join Multiple Species Delimitation Methods Outputs — delim_join","text":"delim_join() returns tbl_df species delimitation outputs whose partitions consistent across different methods.","code":""},{"path":"https://legallab.github.io/delimtools/reference/delim_join.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Join Multiple Species Delimitation Methods Outputs — delim_join","text":"","code":"delim_join(delim)"},{"path":"https://legallab.github.io/delimtools/reference/delim_join.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Join Multiple Species Delimitation Methods Outputs — delim_join","text":"delim list data.frame multiple species delimitation methods outputs.","code":""},{"path":"https://legallab.github.io/delimtools/reference/delim_join.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Join Multiple Species Delimitation Methods Outputs — delim_join","text":"object class tbl_df.","code":""},{"path":"https://legallab.github.io/delimtools/reference/delim_join.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Join Multiple Species Delimitation Methods Outputs — delim_join","text":"delim_join() helper function join multiple lists columns species delimitation outputs single tbl_df keeping consistent identifications across multiple methods. Species delimitation outputs general list data frame sample labels species partitions (Species 1, Species 2, etc.). partition names may across two methods. delim_join() standardizes partition names across two species delimitation outputs keeping underlying structure intact.","code":""},{"path":"https://legallab.github.io/delimtools/reference/delim_join.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Join Multiple Species Delimitation Methods Outputs — delim_join","text":"Pedro S. Bittencourt, Rupert . Collins.","code":""},{"path":"https://legallab.github.io/delimtools/reference/delim_join.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Join Multiple Species Delimitation Methods Outputs — delim_join","text":"","code":"# \\donttest{ ## run GMYC gmyc_res <- splits::gmyc(ape::as.phylo(geophagus_beast), method = \"single\") #> node\t T\t loglik #> 2 -0.2503616 1000.199  #> 3 -0.1229369 999.5983  #> 4 -0.0789159 1000.413  #> 5 -0.07317712 999.2487  #> 6 -0.06528104 1000.194  #> 7 -0.05250486 1000.794  #> 8 -0.04465915 1000.808  #> 9 -0.04302288 1001.093  #> 10 -0.04030643 1001.338  #> 11 -0.03916037 1001.458  #> 12 -0.03904058 1002.02  #> 13 -0.03515353 1002.337  #> 14 -0.0346084 1002.964  #> 15 -0.03278097 1003.53  #> 16 -0.02541094 1004.957  #> 17 -0.02413816 1006.11  #> 18 -0.02142377 1006.353  #> 19 -0.02018164 1008.143  #> 20 -0.0167524 1010.027  #> 21 -0.0164289 1010.027  #> 22 -0.01521815 1009.605  #> 23 -0.01460825 1009.586  #> 24 -0.01435513 1009.153  #> 25 -0.01372697 1008.74  #> 26 -0.01335444 1007.496  #> 27 -0.01311278 1006.208  #> 28 -0.0131017 1006.185  #> 29 -0.01240316 1006.167  #> 30 -0.01219801 1004.897  #> 31 -0.01199715 1005.093  #> 32 -0.01174803 1006.109  #> 33 -0.01114228 1006.38  #> 34 -0.01111022 1004.802  #> 35 -0.01100491 1004.5  #> 36 -0.0107574 1004.747  #> 37 -0.01062164 1004.103  #> 38 -0.01060558 1003.999  #> 39 -0.01050048 1003.101  #> 40 -0.01049683 1002.807  #> 41 -0.01043136 1002.744  #> 42 -0.01003061 1003.447  #> 43 -0.01001803 1002.766  #> 44 -0.009975316 1002.918  #> 45 -0.009975263 1002.088  #> 46 -0.009938944 1001.959  #> 47 -0.009913875 1001.172  #> 48 -0.009825785 1001.681  #> 49 -0.009780681 1002.139  #> 50 -0.009371663 1001.726  #> 51 -0.009247986 1001.186  #> 52 -0.009007852 1001.444  #> 53 -0.008996279 1001.294  #> 54 -0.00888486 1000.469  #> 55 -0.008597392 1000.302  #> 56 -0.008565803 999.5867  #> 57 -0.008280494 999.1293  #> 58 -0.008164649 997.9924  #> 59 -0.008076452 996.8458  #> 60 -0.007999869 996.0699  #> 61 -0.00765457 995.2669  #> 62 -0.007646285 994.7324  #> 63 -0.007643749 993.9068  #> 64 -0.007627436 993.0406  #> 65 -0.007492421 993.934  #> 66 -0.007020123 993.1576  #> 67 -0.006912393 993.2364  #> 68 -0.006783196 992.5072  #> 69 -0.006747962 992.281  #> 70 -0.006264295 992.4479  #> 71 -0.00601552 992.8324  #> 72 -0.005795439 993.0989  #> 73 -0.00573242 993.1665  #> 74 -0.005509334 992.8808  #> 75 -0.005488503 992.3843  #> 76 -0.005425978 992.5391  #> 77 -0.005411267 992.0382  #> 78 -0.005306896 991.5123  #> 79 -0.005306051 990.9922  #> 80 -0.005164414 991.1308  #> 81 -0.004907784 991.3595  #> 82 -0.004797087 990.8825  #> 83 -0.004746877 990.4211  #> 84 -0.004662424 990.3632  #> 85 -0.004520232 991.0171  #> 86 -0.004264922 990.6133  #> 87 -0.004251489 990.7873  #> 88 -0.004157546 990.4221  #> 89 -0.004112639 990.721  #> 90 -0.004108289 991.061  #> 91 -0.003888943 990.6722  #> 92 -0.003801218 991.2324  #> 93 -0.003754736 990.9821  #> 94 -0.003731354 990.7235  #> 95 -0.003688184 990.4522  #> 96 -0.003591255 990.6112  #> 97 -0.003564653 990.68  #> 98 -0.003442048 990.46  #> 99 -0.00341143 990.2366  #> 100 -0.003393153 990.0051  #> 101 -0.003386863 989.8279  #> 102 -0.003361018 989.6713  #> 103 -0.003288484 989.7291  #> 104 -0.003241535 989.5243  #> 105 -0.003124931 989.9282  #> 106 -0.003105419 990.3339  #> 107 -0.003101937 990.2319  #> 108 -0.003075062 990.3473  #> 109 -0.00306445 990.4668  #> 110 -0.002980459 990.176  #> 111 -0.002962743 990.4197  #> 112 -0.002957225 990.2826  #> 113 -0.002838299 990.1388  #> 114 -0.002785399 990.0348  #> 115 -0.002736578 989.9954  #> 116 -0.002734335 990.0459  #> 117 -0.002686254 989.8565  #> 118 -0.002669519 990.2641  #> 119 -0.002637125 989.947  #> 120 -0.002617322 989.8852  #> 121 -0.002542929 989.8291  #> 122 -0.002478636 989.7958  #> 123 -0.002473902 989.7829  #> 124 -0.00206938 989.7749  #> 125 -0.002015661 989.8818  #> 126 -0.001766944 990.0066  #> 127 -0.001725274 990.2031  #> 128 -0.001652185 990.4162  #> 129 -0.001598489 990.6556  #> 130 -0.00149766 990.9172  #> 131 -0.001491313 991.216  #> 132 -0.001312548 991.5267  #> 133 -0.001197979 991.9014  #> 134 -0.001131569 992.3254  #> 135 -0.000997143 992.7881  #> 136 -0.0007525219 993.3164  #>  #> Sun Mar 30 05:32:09 2025 #> finish.  # create a tibble gmyc_df <- gmyc_tbl(gmyc_res)  ## run bGMYC bgmyc_res <- bGMYC::bgmyc.singlephy(ape::as.phylo(geophagus_beast),   mcmc = 11000,   burnin = 1000,   thinning = 100,   t1 = 2,   t2 = ape::Ntip(ape::as.phylo(geophagus_beast)),   start = c(1, 0.5, 50) ) #> You are running bGMYC on a single phylogenetic tree. #> This tree contains  137  tips. #> The Yule process rate change parameter has a uniform prior ranging from  0  to  2 . #> The coalescent process rate change parameter has a uniform prior ranging from  0  to  2 . #> The threshold parameter, which is equal to the number of species, has a uniform prior ranging from  2  to  137 . The upper bound of this prior should not be more than the number of tips in your trees. #> The MCMC will start with the Yule parameter set to  1 . #> The MCMC will start with the coalescent parameter set to  0.5 . #> The MCMC will start with the threshold parameter set to  50 . If this number is greater than the number of tips in your tree, an error will result. #> Given your settings for mcmc, burnin and thinning, your analysis will result in  100  samples being retained. #> 10 %  #> 20 %  #> 30 %  #> 40 %  #> 50 %  #> 60 %  #> 80 %  #> 90 %  #> 100 %  #> acceptance rates  #>  py pc th  #>  0.5508182 0.5491818 0.2359091   # create a tibble bgmyc_df <- bgmyc_tbl(bgmyc_res, ppcutoff = 0.05)  ## LocMin  # create a distance matrix mat <- ape::dist.dna(geophagus, model = \"raw\", pairwise.deletion = TRUE)  # estimate local minima from `mat` locmin_res <- spider::localMinima(mat) #> [1] 0.006828358 0.018994392 0.040791871 0.055999413 0.067151612 0.082105695  # create a tibble locmin_df <- locmin_tbl(mat,   threshold = locmin_res$localMinima[1],   haps = ape::as.phylo(geophagus_beast)$tip.label )  # join delimitations all_delims <- delim_join(list(gmyc_df, bgmyc_df, locmin_df)) #> Checking species delimitation tables... #> Checking table 1 against table 2... #> ✔ Labels are the same across tables but they likely are unordered. #> Checking table 1 against table 2... #> Checking table 1 against table 3... #> Checking table 1 against table 3... #> ✔ Labels are the same across tables but they likely are unordered. #> Checking table 1 against table 3... #> ✔ Checking complete! #> Checking table 1 against table 3... #> Checking table 1 against table 3...  # check all_delims #> # A tibble: 137 × 4 #>    labels     bgmyc gmyc  locmin #>    <chr>      <chr> <chr> <chr>  #>  1 GU701784.1 sp1   sp1   sp1    #>  2 GU701785.1 sp1   sp1   sp1    #>  3 MH780911.1 sp1   sp1   sp1    #>  4 OR732927.1 sp1   sp1   sp1    #>  5 JN988869.1 sp1   sp1   sp1    #>  6 OR732928.1 sp1   sp1   sp1    #>  7 MZ504448.1 sp2   sp2   sp2    #>  8 MZ504450.1 sp2   sp2   sp2    #>  9 MZ504454.1 sp2   sp2   sp2    #> 10 MZ504457.1 sp3   sp3   sp3    #> # ℹ 127 more rows  # }"},{"path":"https://legallab.github.io/delimtools/reference/delimtools-package.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper Functions for Species Delimitation Analysis — delimtools-package","title":"Helper Functions for Species Delimitation Analysis — delimtools-package","text":"Helpers functions process, analyse, visualize output single locus species delimitation methods. full functionality, please install suggested software https://legallab.github.io/delimtools/articles/install.html.","code":""},{"path":[]},{"path":"https://legallab.github.io/delimtools/reference/delimtools-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Helper Functions for Species Delimitation Analysis — delimtools-package","text":"Maintainer: Pedro Bittencourt pedro.sennabittencourt@gmail.com (ORCID) [copyright holder] Authors: Rupert Collins rupertcollins@gmail.com (ORCID) [contributor, copyright holder] Tomas Hrbek hrbek@evoamazon.net (ORCID) [contributor]","code":""},{"path":"https://legallab.github.io/delimtools/reference/drop_sequences.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove Sequences of a DNAbin list object — drop_sequences","title":"Remove Sequences of a DNAbin list object — drop_sequences","text":"drop_sequences() removes sequences FASTA file names.","code":""},{"path":"https://legallab.github.io/delimtools/reference/drop_sequences.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove Sequences of a DNAbin list object — drop_sequences","text":"","code":"drop_sequences(dna, identifier, drop = TRUE)"},{"path":"https://legallab.github.io/delimtools/reference/drop_sequences.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove Sequences of a DNAbin list object — drop_sequences","text":"dna DNAbin list object. identifier character vector containing sequence names. drop Logical. TRUE, sequence names identifier dropped dna. FALSE, sequence names absent identifier dropped instead.","code":""},{"path":"https://legallab.github.io/delimtools/reference/drop_sequences.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove Sequences of a DNAbin list object — drop_sequences","text":"object class DNAbin.","code":""},{"path":"https://legallab.github.io/delimtools/reference/drop_sequences.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Remove Sequences of a DNAbin list object — drop_sequences","text":"drop_sequences() relies exact match sequence names within fasta file identifier argument.","code":""},{"path":"https://legallab.github.io/delimtools/reference/drop_sequences.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Remove Sequences of a DNAbin list object — drop_sequences","text":"Pedro S. Bittencourt","code":""},{"path":"https://legallab.github.io/delimtools/reference/drop_sequences.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Remove Sequences of a DNAbin list object — drop_sequences","text":"","code":"# Create a vector of sequence names to drop or keep. identifier <- names(geophagus)[1:3]  # Remove sequences listed in identifier drop_sequences(geophagus, identifier, drop = TRUE) #> 351 DNA sequences in binary format stored in a list. #>  #> All sequences of same length: 690  #>  #> Labels: #> MZ504313.1 #> MZ504311.1 #> MZ504312.1 #> MZ504309.1 #> MZ504341.1 #> MZ504337.1 #> ... #>  #> Base composition: #>     a     c     g     t  #> 0.237 0.282 0.177 0.303  #> (Total: 242.19 kb)  # Remove sequences not listed in identifier drop_sequences(geophagus, identifier, drop = FALSE) #> 3 DNA sequences in binary format stored in a list. #>  #> All sequences of same length: 690  #>  #> Labels: #> MZ504301.1 #> MZ504328.1 #> MZ504318.1 #>  #> Base composition: #>     a     c     g     t  #> 0.237 0.284 0.181 0.298  #> (Total: 2.07 kb)"},{"path":"https://legallab.github.io/delimtools/reference/dwc_terms.html","id":null,"dir":"Reference","previous_headings":"","what":"Print Darwin Core Terms, Definitions and Examples as Bullet Lists — dwc_terms","title":"Print Darwin Core Terms, Definitions and Examples as Bullet Lists — dwc_terms","text":"dwc_terms() checks vector list terms return definitions examples one .","code":""},{"path":"https://legallab.github.io/delimtools/reference/dwc_terms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print Darwin Core Terms, Definitions and Examples as Bullet Lists — dwc_terms","text":"","code":"dwc_terms(dwc, terms)"},{"path":"https://legallab.github.io/delimtools/reference/dwc_terms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print Darwin Core Terms, Definitions and Examples as Bullet Lists — dwc_terms","text":"dwc list standard terms definitions created using get_dwc. terms vector list terms check.","code":""},{"path":"https://legallab.github.io/delimtools/reference/dwc_terms.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Print Darwin Core Terms, Definitions and Examples as Bullet Lists — dwc_terms","text":"bullet list.","code":""},{"path":"https://legallab.github.io/delimtools/reference/dwc_terms.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Print Darwin Core Terms, Definitions and Examples as Bullet Lists — dwc_terms","text":"term vector list, dwc_terms return bullet list containing term, followed definition examples.","code":""},{"path":"https://legallab.github.io/delimtools/reference/dwc_terms.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Print Darwin Core Terms, Definitions and Examples as Bullet Lists — dwc_terms","text":"Pedro S. Bittencourt, Rupert . Collins.","code":""},{"path":"https://legallab.github.io/delimtools/reference/dwc_terms.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Print Darwin Core Terms, Definitions and Examples as Bullet Lists — dwc_terms","text":"","code":"dwc <- get_dwc(type= \"simple\") dwc_terms(dwc, c(\"genus\", \"scientificName\")) #> • genus: The full scientific name of the genus in which the dwc:Taxon is #> classified. Examples: `Puma`; `Monoclea` #> • scientificName: The full scientific name, with authorship and date #> information if known. When forming part of a dwc:Identification, this should be #> the name in lowest level taxonomic rank that can be determined. This term #> should not contain identification qualifications, which should instead be #> supplied in the dwc:identificationQualifier term. Examples: `Coleoptera` #> (order); `Vespertilionidae` (family); `Manis` (genus); `Ctenomys sociabilis` #> (genus + specificEpithet); `Ambystoma tigrinum diaboli` (genus + #> specificEpithet + infraspecificEpithet); `Roptrocerus typographi (Györfi, #> 1952)` (genus + specificEpithet + scientificNameAuthorship); `Quercus agrifolia #> var. oxyadenia (Torr.) J.T. Howell` (genus + specificEpithet + taxonRank + #> infraspecificEpithet + scientificNameAuthorship); `×Agropogon littoralis (Sm.) #> C. E. Hubb.`; `Mentha ×smithiana R. A. Graham`; `Agrostis stolonifera L. × #> Polypogon monspeliensis (L.) Desf.`"},{"path":"https://legallab.github.io/delimtools/reference/geophagus.html","id":null,"dir":"Reference","previous_headings":"","what":"Cytochrome C Oxidase Sequences of Geophagus Eartheaters — geophagus","title":"Cytochrome C Oxidase Sequences of Geophagus Eartheaters — geophagus","text":"set 354 sequences mitochondrial gene cytochrome c oxidase subunit (COI-5P) eartheaters Geophagus sensu stricto species group downloaded GenBank. sequences data analysed Ximenes et al. (2021).","code":""},{"path":"https://legallab.github.io/delimtools/reference/geophagus.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cytochrome C Oxidase Sequences of Geophagus Eartheaters — geophagus","text":"","code":"geophagus"},{"path":"https://legallab.github.io/delimtools/reference/geophagus.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Cytochrome C Oxidase Sequences of Geophagus Eartheaters — geophagus","text":"object class DNAbin","code":""},{"path":"https://legallab.github.io/delimtools/reference/geophagus.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Cytochrome C Oxidase Sequences of Geophagus Eartheaters — geophagus","text":"Ximenes , Bittencourt PS, Machado VN, Hrbek T, Farias IP. 2021. Mapping hidden diversity Geophagus sensu stricto species group (Cichlidae: Geophagini) Amazon basin. PeerJ 9:e12443.","code":""},{"path":"https://legallab.github.io/delimtools/reference/geophagus_beast.html","id":null,"dir":"Reference","previous_headings":"","what":"Geophagus Eartheaters Ultrametric Tree — geophagus_beast","title":"Geophagus Eartheaters Ultrametric Tree — geophagus_beast","text":"Maximum Clade Credibility (MCC) tree containing unique haplotypes geophagus estimated using BEAST2 v2.6.7. Unique haplotypes select using hap_collapse.","code":""},{"path":"https://legallab.github.io/delimtools/reference/geophagus_beast.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Geophagus Eartheaters Ultrametric Tree — geophagus_beast","text":"","code":"geophagus_beast"},{"path":"https://legallab.github.io/delimtools/reference/geophagus_beast.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Geophagus Eartheaters Ultrametric Tree — geophagus_beast","text":"object class treedata.","code":""},{"path":"https://legallab.github.io/delimtools/reference/geophagus_bootstraps.html","id":null,"dir":"Reference","previous_headings":"","what":"Geophagus Eartheaters Bootstrap Trees — geophagus_bootstraps","title":"Geophagus Eartheaters Bootstrap Trees — geophagus_bootstraps","text":"set 100 Maximum Likelihood trees sampled bootstrap trees used estimate geophagus_raxml using RAxML-NG v. 1.1.0-master. Meant used confidence_intervals estimation.","code":""},{"path":"https://legallab.github.io/delimtools/reference/geophagus_bootstraps.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Geophagus Eartheaters Bootstrap Trees — geophagus_bootstraps","text":"","code":"geophagus_bootstraps"},{"path":"https://legallab.github.io/delimtools/reference/geophagus_bootstraps.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Geophagus Eartheaters Bootstrap Trees — geophagus_bootstraps","text":"object class multiphylo","code":""},{"path":"https://legallab.github.io/delimtools/reference/geophagus_delims.html","id":null,"dir":"Reference","previous_headings":"","what":"Geophagus Eartheaters Species Partitions — geophagus_delims","title":"Geophagus Eartheaters Species Partitions — geophagus_delims","text":"data frame containing species delimitation partitions 137 unique haplotypes geophagus generated using functions contained package. Use report_delim check number lineages per method.","code":""},{"path":"https://legallab.github.io/delimtools/reference/geophagus_delims.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Geophagus Eartheaters Species Partitions — geophagus_delims","text":"","code":"geophagus_delims"},{"path":"https://legallab.github.io/delimtools/reference/geophagus_delims.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Geophagus Eartheaters Species Partitions — geophagus_delims","text":"dataframe 137 rows 9 columns: labels Unique haplotype labels abgd species partitions ABGD method asap species partitions ASAP method bgmyc species partitions bGMYC method gmyc species partitions GMYC method locmin species partitions locmin method morph species partitions following NCBI taxonomy mptp species partitions mPTP method ptp species partitions PTP method","code":""},{"path":"https://legallab.github.io/delimtools/reference/geophagus_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Geophagus Earthearts Associated Metadata — geophagus_info","title":"Geophagus Earthearts Associated Metadata — geophagus_info","text":"associated metadata 354 sequences mitochondrial gene cytochrome c oxidase subunit (COI-5P) Geophagus sensu stricto species group downloaded GenBank stored geophagus.","code":""},{"path":"https://legallab.github.io/delimtools/reference/geophagus_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Geophagus Earthearts Associated Metadata — geophagus_info","text":"","code":"geophagus_info"},{"path":"https://legallab.github.io/delimtools/reference/geophagus_info.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Geophagus Earthearts Associated Metadata — geophagus_info","text":"data frame 354 rows 19 columns: scientificName scientific name scientificNameGenBank scientific name following NCBI taxonomy class class order order family family genus genus dbid NCBI Nucleotide Database internal ID gbAccession NCBI Nucleotide Database accession number gene Gene acronym length Sequence length base pairs (bp) organelle Organelle gene sequenced catalogNumber identifier record within data set collection country Name Country followed sampling locality (available) publishedAs Title article generated sequences publishedIn Journal published article publishedBy person, group, organization responsible depositing sequence date Date published decimalLatitude Latitude decimal degrees decimalLongitude Longitude decimal degrees","code":""},{"path":"https://legallab.github.io/delimtools/reference/geophagus_posterior.html","id":null,"dir":"Reference","previous_headings":"","what":"Geophagus Eartheaters Posterior Trees — geophagus_posterior","title":"Geophagus Eartheaters Posterior Trees — geophagus_posterior","text":"set 100 ultrametric trees sampled posterior trees used estimate geophagus_beast using BEAST2 v2.6.7. Meant used confidence_intervals estimation.","code":""},{"path":"https://legallab.github.io/delimtools/reference/geophagus_posterior.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Geophagus Eartheaters Posterior Trees — geophagus_posterior","text":"","code":"geophagus_posterior"},{"path":"https://legallab.github.io/delimtools/reference/geophagus_posterior.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Geophagus Eartheaters Posterior Trees — geophagus_posterior","text":"object class multiphylo","code":""},{"path":"https://legallab.github.io/delimtools/reference/geophagus_raxml.html","id":null,"dir":"Reference","previous_headings":"","what":"Geophagus Eartheaters Phylogram — geophagus_raxml","title":"Geophagus Eartheaters Phylogram — geophagus_raxml","text":"Maximum Likelihood Estimation Tree containing unique haplotypes geophagus estimated using RAxML-NG v. 1.1.0-master. Unique haplotypes select using hap_collapse.","code":""},{"path":"https://legallab.github.io/delimtools/reference/geophagus_raxml.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Geophagus Eartheaters Phylogram — geophagus_raxml","text":"","code":"geophagus_raxml"},{"path":"https://legallab.github.io/delimtools/reference/geophagus_raxml.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Geophagus Eartheaters Phylogram — geophagus_raxml","text":"object class treedata.","code":""},{"path":"https://legallab.github.io/delimtools/reference/get_delim_cols.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Labels and Colors from Species Delimitation Partitions — get_delim_cols","title":"Extract Labels and Colors from Species Delimitation Partitions — get_delim_cols","text":"get_delim_cols() returns tbl_df format containing extracted processed data delim_autoplot.","code":""},{"path":"https://legallab.github.io/delimtools/reference/get_delim_cols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Labels and Colors from Species Delimitation Partitions — get_delim_cols","text":"","code":"get_delim_cols(p, delimname = NULL, hap_tbl = NULL)"},{"path":"https://legallab.github.io/delimtools/reference/get_delim_cols.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Labels and Colors from Species Delimitation Partitions — get_delim_cols","text":"p Output delim_autoplot. delimname character vector species delimitation names (optional). provided, function filters data include rows matching terms. Default NULL. hap_tbl output haplotype_tbl (optional). provided, function annotate color fill data collapsed haplotypes. Default NULL.","code":""},{"path":"https://legallab.github.io/delimtools/reference/get_delim_cols.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Labels and Colors from Species Delimitation Partitions — get_delim_cols","text":"object class tbl_df.","code":""},{"path":"https://legallab.github.io/delimtools/reference/get_delim_cols.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract Labels and Colors from Species Delimitation Partitions — get_delim_cols","text":"get_delim_cols() convenience function extract labels, species partitions, color fill data output delim_autoplot tbl_df format. best used combined haplotype information haplotype_tbl combined metadata, GPS coordinates map plotting.","code":""},{"path":"https://legallab.github.io/delimtools/reference/get_delim_cols.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Extract Labels and Colors from Species Delimitation Partitions — get_delim_cols","text":"Pedro S. Bittencourt.","code":""},{"path":"https://legallab.github.io/delimtools/reference/get_delim_cols.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Labels and Colors from Species Delimitation Partitions — get_delim_cols","text":"","code":"# plot using autoplot p <- delim_autoplot(geophagus_delims, geophagus_beast) #> Warning: ⚠ Argument `tbl_labs` not provided. Using tiplabels instead. #> Warning: ⚠ Argument `delim_order` not provided. Using default order from #> `geophagus_delims`. #> Warning: ⚠ Argument `col_vec` not provided. Customizing one using `delim_brewer()`. #> ℹ Please use `delimtools::delim_brewer()` to create even better colour #>   palettes! #> Warning: ⚠ `n_match` was not found. Using `n_match= 4` instead.  # view  p   # get haplotypes hap_tbl <- haplotype_tbl(geophagus) #> Warning: ⚠ You have missing data \"('N','-' '?')\" or ambiguity inside your sequence, i.e. #> not padding the ends, and this may have unintended consequences later, as they #> have now been removed! #> ℹ The names of the samples are bellow. #> GU701784.1, GU701785.1  # extract colors for consensus get_delim_cols(p, delimname= \"consensus\", hap_tbl= hap_tbl) #> # A tibble: 354 × 6 #>    labels     method    spp   fill    colour  status    #>    <chr>      <fct>     <fct> <chr>   <chr>   <chr>     #>  1 MZ504432.1 consensus sp3   #42977E #42977E haplotype #>  2 MZ504431.1 consensus sp3   #42977E #42977E haplotype #>  3 MZ504433.1 consensus sp3   #42977E #42977E haplotype #>  4 MZ504415.1 consensus sp3   #42977E #42977E haplotype #>  5 MZ504442.1 consensus sp3   #42977E #42977E haplotype #>  6 MZ504420.1 consensus sp3   #42977E #42977E haplotype #>  7 MZ504424.1 consensus sp3   #42977E #42977E haplotype #>  8 MZ504400.1 consensus sp3   #42977E #42977E haplotype #>  9 MZ504414.1 consensus sp3   #42977E #42977E haplotype #> 10 MZ504394.1 consensus sp3   #42977E #42977E haplotype #> # ℹ 344 more rows"},{"path":"https://legallab.github.io/delimtools/reference/get_dwc.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Darwin Core Terms and Definitions — get_dwc","title":"Get Darwin Core Terms and Definitions — get_dwc","text":"get_dwc() returns list standardized terms definitions used Darwin Core Maintenance Interest Group https://dwc.tdwg.org/.","code":""},{"path":"https://legallab.github.io/delimtools/reference/get_dwc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Darwin Core Terms and Definitions — get_dwc","text":"","code":"get_dwc(type)"},{"path":"https://legallab.github.io/delimtools/reference/get_dwc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Darwin Core Terms and Definitions — get_dwc","text":"type type distribution files download. Available options : simple Simple Darwin Core Terms. Darwin Core Terms.","code":""},{"path":"https://legallab.github.io/delimtools/reference/get_dwc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Darwin Core Terms and Definitions — get_dwc","text":"list.","code":""},{"path":"https://legallab.github.io/delimtools/reference/get_dwc.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get Darwin Core Terms and Definitions — get_dwc","text":"get_dwc() reads Darwin Core distribution documents terms Github repository https://github.com/tdwg/dwc directly Environment. function return list containing recent accepted terms vector tbl_df containing terms, definitions, examples details one .","code":""},{"path":"https://legallab.github.io/delimtools/reference/get_dwc.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get Darwin Core Terms and Definitions — get_dwc","text":"Pedro S. Bittencourt, Rupert . Collins","code":""},{"path":"https://legallab.github.io/delimtools/reference/get_dwc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get Darwin Core Terms and Definitions — get_dwc","text":"","code":"dwc <- get_dwc(type= \"simple\")"},{"path":"https://legallab.github.io/delimtools/reference/gmyc_tbl.html","id":null,"dir":"Reference","previous_headings":"","what":"Turns GMYC Results Into a Tibble — gmyc_tbl","title":"Turns GMYC Results Into a Tibble — gmyc_tbl","text":"gmyc_tbl() processes output gmyc object class tbl_df.","code":""},{"path":"https://legallab.github.io/delimtools/reference/gmyc_tbl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Turns GMYC Results Into a Tibble — gmyc_tbl","text":"","code":"gmyc_tbl(gmyc_res, delimname = \"gmyc\")"},{"path":"https://legallab.github.io/delimtools/reference/gmyc_tbl.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Turns GMYC Results Into a Tibble — gmyc_tbl","text":"Pons J., Barraclough T. G., Gomez-Zurita J., Cardoso ., Duran D. P., Hazell S., Kamoun S., Sumlin W. D., Vogler . P. 2006. Sequence-based species delimitation DNA taxonomy undescribed insects. Systematic Biology. 55:595-609. Monaghan M. T., Wild R., Elliot M., Fujisawa T., Balke M., Inward D. J. G., Lees D. C., Ranaivosolo R., Eggleton P., Barraclough T. G., Vogler . P. 2009. Accelerated species inventory Madagascar using coalescent-based models species delineation. Systematic Biology. 58:298-311. Fujisawa T., Barraclough T. G. 2013. Delimiting Species Using Single-Locus Data Generalized Mixed Yule Coalescent Approach: Revised Method Evaluation Simulated Data Sets. Systematic Biology. 62(5):707–724.","code":""},{"path":"https://legallab.github.io/delimtools/reference/gmyc_tbl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Turns GMYC Results Into a Tibble — gmyc_tbl","text":"gmyc_res Output gmyc. delimname Character. String rename delimitation method table. Default 'gmyc'.","code":""},{"path":"https://legallab.github.io/delimtools/reference/gmyc_tbl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Turns GMYC Results Into a Tibble — gmyc_tbl","text":"object class tbl_df.","code":""},{"path":"https://legallab.github.io/delimtools/reference/gmyc_tbl.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Turns GMYC Results Into a Tibble — gmyc_tbl","text":"splits package uses gmyc optimize genetic clusters spec.list cluster samples species partitions. gmyc_tbl() turns results tibble matches output bgmyc_tbl locmin_tbl.","code":""},{"path":"https://legallab.github.io/delimtools/reference/gmyc_tbl.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Turns GMYC Results Into a Tibble — gmyc_tbl","text":"Thomas Ezard, Tomochika Fujisawa, Tim Barraclough.","code":""},{"path":"https://legallab.github.io/delimtools/reference/gmyc_tbl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Turns GMYC Results Into a Tibble — gmyc_tbl","text":"","code":"# run GMYC gmyc_res <- splits::gmyc(ape::as.phylo(geophagus_beast)) #> node\t T\t loglik #> 2 -0.2503616 1000.199  #> 3 -0.1229369 999.5983  #> 4 -0.0789159 1000.413  #> 5 -0.07317712 999.2487  #> 6 -0.06528104 1000.194  #> 7 -0.05250486 1000.794  #> 8 -0.04465915 1000.808  #> 9 -0.04302288 1001.093  #> 10 -0.04030643 1001.338  #> 11 -0.03916037 1001.458  #> 12 -0.03904058 1002.02  #> 13 -0.03515353 1002.337  #> 14 -0.0346084 1002.964  #> 15 -0.03278097 1003.53  #> 16 -0.02541094 1004.957  #> 17 -0.02413816 1006.11  #> 18 -0.02142377 1006.353  #> 19 -0.02018164 1008.143  #> 20 -0.0167524 1010.027  #> 21 -0.0164289 1010.027  #> 22 -0.01521815 1009.605  #> 23 -0.01460825 1009.586  #> 24 -0.01435513 1009.153  #> 25 -0.01372697 1008.74  #> 26 -0.01335444 1007.496  #> 27 -0.01311278 1006.208  #> 28 -0.0131017 1006.185  #> 29 -0.01240316 1006.167  #> 30 -0.01219801 1004.897  #> 31 -0.01199715 1005.093  #> 32 -0.01174803 1006.109  #> 33 -0.01114228 1006.38  #> 34 -0.01111022 1004.802  #> 35 -0.01100491 1004.5  #> 36 -0.0107574 1004.747  #> 37 -0.01062164 1004.103  #> 38 -0.01060558 1003.999  #> 39 -0.01050048 1003.101  #> 40 -0.01049683 1002.807  #> 41 -0.01043136 1002.744  #> 42 -0.01003061 1003.447  #> 43 -0.01001803 1002.766  #> 44 -0.009975316 1002.918  #> 45 -0.009975263 1002.088  #> 46 -0.009938944 1001.959  #> 47 -0.009913875 1001.172  #> 48 -0.009825785 1001.681  #> 49 -0.009780681 1002.139  #> 50 -0.009371663 1001.726  #> 51 -0.009247986 1001.186  #> 52 -0.009007852 1001.444  #> 53 -0.008996279 1001.294  #> 54 -0.00888486 1000.469  #> 55 -0.008597392 1000.302  #> 56 -0.008565803 999.5867  #> 57 -0.008280494 999.1293  #> 58 -0.008164649 997.9924  #> 59 -0.008076452 996.8458  #> 60 -0.007999869 996.0699  #> 61 -0.00765457 995.2669  #> 62 -0.007646285 994.7324  #> 63 -0.007643749 993.9068  #> 64 -0.007627436 993.0406  #> 65 -0.007492421 993.934  #> 66 -0.007020123 993.1576  #> 67 -0.006912393 993.2364  #> 68 -0.006783196 992.5072  #> 69 -0.006747962 992.281  #> 70 -0.006264295 992.4479  #> 71 -0.00601552 992.8324  #> 72 -0.005795439 993.0989  #> 73 -0.00573242 993.1665  #> 74 -0.005509334 992.8808  #> 75 -0.005488503 992.3843  #> 76 -0.005425978 992.5391  #> 77 -0.005411267 992.0382  #> 78 -0.005306896 991.5123  #> 79 -0.005306051 990.9922  #> 80 -0.005164414 991.1308  #> 81 -0.004907784 991.3595  #> 82 -0.004797087 990.8825  #> 83 -0.004746877 990.4211  #> 84 -0.004662424 990.3632  #> 85 -0.004520232 991.0171  #> 86 -0.004264922 990.6133  #> 87 -0.004251489 990.7873  #> 88 -0.004157546 990.4221  #> 89 -0.004112639 990.721  #> 90 -0.004108289 991.061  #> 91 -0.003888943 990.6722  #> 92 -0.003801218 991.2324  #> 93 -0.003754736 990.9821  #> 94 -0.003731354 990.7235  #> 95 -0.003688184 990.4522  #> 96 -0.003591255 990.6112  #> 97 -0.003564653 990.68  #> 98 -0.003442048 990.46  #> 99 -0.00341143 990.2366  #> 100 -0.003393153 990.0051  #> 101 -0.003386863 989.8279  #> 102 -0.003361018 989.6713  #> 103 -0.003288484 989.7291  #> 104 -0.003241535 989.5243  #> 105 -0.003124931 989.9282  #> 106 -0.003105419 990.3339  #> 107 -0.003101937 990.2319  #> 108 -0.003075062 990.3473  #> 109 -0.00306445 990.4668  #> 110 -0.002980459 990.176  #> 111 -0.002962743 990.4197  #> 112 -0.002957225 990.2826  #> 113 -0.002838299 990.1388  #> 114 -0.002785399 990.0348  #> 115 -0.002736578 989.9954  #> 116 -0.002734335 990.0459  #> 117 -0.002686254 989.8565  #> 118 -0.002669519 990.2641  #> 119 -0.002637125 989.947  #> 120 -0.002617322 989.8852  #> 121 -0.002542929 989.8291  #> 122 -0.002478636 989.7958  #> 123 -0.002473902 989.7829  #> 124 -0.00206938 989.7749  #> 125 -0.002015661 989.8818  #> 126 -0.001766944 990.0066  #> 127 -0.001725274 990.2031  #> 128 -0.001652185 990.4162  #> 129 -0.001598489 990.6556  #> 130 -0.00149766 990.9172  #> 131 -0.001491313 991.216  #> 132 -0.001312548 991.5267  #> 133 -0.001197979 991.9014  #> 134 -0.001131569 992.3254  #> 135 -0.000997143 992.7881  #> 136 -0.0007525219 993.3164  #>  #> Sun Mar 30 05:32:22 2025 #> finish.  # create a tibble gmyc_df <- gmyc_tbl(gmyc_res)  # check gmyc_df #> # A tibble: 137 × 2 #>    labels      gmyc #>    <chr>      <int> #>  1 GU701784.1     1 #>  2 GU701785.1     1 #>  3 MH780911.1     1 #>  4 OR732927.1     1 #>  5 JN988869.1     1 #>  6 OR732928.1     1 #>  7 MZ504387.1     2 #>  8 MZ504388.1     2 #>  9 MZ504369.1     2 #> 10 MZ504390.1     2 #> # ℹ 127 more rows"},{"path":"https://legallab.github.io/delimtools/reference/hap_collapse.html","id":null,"dir":"Reference","previous_headings":"","what":"Removes Duplicated Sequences from Alignment — hap_collapse","title":"Removes Duplicated Sequences from Alignment — hap_collapse","text":"hap_collapse() collapses haplotypes DNAbin object, keeping unique haplotypes .","code":""},{"path":"https://legallab.github.io/delimtools/reference/hap_collapse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Removes Duplicated Sequences from Alignment — hap_collapse","text":"","code":"hap_collapse(dna, clean = TRUE, collapseSubstrings = TRUE, verbose = TRUE)"},{"path":"https://legallab.github.io/delimtools/reference/hap_collapse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Removes Duplicated Sequences from Alignment — hap_collapse","text":"dna DNAbin object. clean logical. Whether remove remove non ACTG bases alignment. collapseSubstrings logical. Whether collapse collapse shorter identical sequences. verbose logical. Returns warning sequence contains non ACTG bases. See clean_dna details.","code":""},{"path":"https://legallab.github.io/delimtools/reference/hap_collapse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Removes Duplicated Sequences from Alignment — hap_collapse","text":"DNAbin object.","code":""},{"path":"https://legallab.github.io/delimtools/reference/hap_collapse.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Removes Duplicated Sequences from Alignment — hap_collapse","text":"hap_collapse() collapses DNAbin object, keeping unique haplotypes . clean = TRUE, function call clean_dna remove non ACTG bases alignment prior collapsing haplotypes. clean = FALSE, function treat data , remove bases. collapseSubstrings = TRUE, function consider shorter identical sequences haplotype collapse , returning longest sequence. collapseSubstrings = FALSE, function consider shorter identical sequences different haplotypes keep .","code":""},{"path":"https://legallab.github.io/delimtools/reference/hap_collapse.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Removes Duplicated Sequences from Alignment — hap_collapse","text":"Rupert . Collins","code":""},{"path":"https://legallab.github.io/delimtools/reference/hap_collapse.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Removes Duplicated Sequences from Alignment — hap_collapse","text":"","code":"# collapse into unique haplotypes, including shorter sequences hap_collapse(geophagus, clean = TRUE, collapseSubstrings = TRUE) #> Warning: ⚠ You have missing data \"('N','-' '?')\" or ambiguity inside your sequence, i.e. #> not padding the ends, and this may have unintended consequences later, as they #> have now been removed! #> ℹ The names of the samples are bellow. #> GU701784.1, GU701785.1 #> 137 DNA sequences in binary format stored in a list. #>  #> Mean sequence length: 643.007  #>    Shortest sequence: 505  #>     Longest sequence: 690  #>  #> Labels: #> MZ504301.1 #> MZ504318.1 #> MZ504341.1 #> MZ504337.1 #> MZ504342.1 #> MZ504304.1 #> ... #>  #> Base composition: #>     a     c     g     t  #> 0.238 0.281 0.177 0.304  #> (Total: 88.09 kb)  # collapse into unique haplotypes keeping shorter sequences hap_collapse(geophagus, clean = TRUE, collapseSubstrings = FALSE) #> Warning: ⚠ You have missing data \"('N','-' '?')\" or ambiguity inside your sequence, i.e. #> not padding the ends, and this may have unintended consequences later, as they #> have now been removed! #> ℹ The names of the samples are bellow. #> GU701784.1, GU701785.1 #> 246 DNA sequences in binary format stored in a list. #>  #> Mean sequence length: 639.764  #>    Shortest sequence: 505  #>     Longest sequence: 690  #>  #> Labels: #> MZ504301.1 #> MZ504328.1 #> MZ504318.1 #> MZ504341.1 #> MZ504337.1 #> MZ504299.1 #> ... #>  #> Base composition: #>     a     c     g     t  #> 0.237 0.282 0.177 0.303  #> (Total: 157.38 kb)"},{"path":"https://legallab.github.io/delimtools/reference/hap_unite.html","id":null,"dir":"Reference","previous_headings":"","what":"Unite Haplotype Summaries with Species Delimitation Outputs — hap_unite","title":"Unite Haplotype Summaries with Species Delimitation Outputs — hap_unite","text":"hap_unite() returns single tbl_df combining results haplotype_tbl collapse_others results delim_join delim_consensus.","code":""},{"path":"https://legallab.github.io/delimtools/reference/hap_unite.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Unite Haplotype Summaries with Species Delimitation Outputs — hap_unite","text":"","code":"hap_unite(hap_tbl, delim)"},{"path":"https://legallab.github.io/delimtools/reference/hap_unite.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Unite Haplotype Summaries with Species Delimitation Outputs — hap_unite","text":"hap_tbl output haplotype_tbl collapse_others. delim output delim_join delim_consensus.","code":""},{"path":"https://legallab.github.io/delimtools/reference/hap_unite.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Unite Haplotype Summaries with Species Delimitation Outputs — hap_unite","text":"object class tbl_df.","code":""},{"path":"https://legallab.github.io/delimtools/reference/hap_unite.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Unite Haplotype Summaries with Species Delimitation Outputs — hap_unite","text":"Many functions package relies usage unique haplotypes due known issues using identical duplicated sequences species delimitation analysis. Thus, outputs often refer unique haplotypes within given dataset, can determined using functions like hap_collapse. Assuming duplicated identical sequence share properties first sequence group , hap_unite() combines output haplotype_tbl output delim_join. Alternativelly, one may use collapse_others delim_consensus well. output may used downstream analysis determine cluster given sequence belongs.","code":""},{"path":"https://legallab.github.io/delimtools/reference/hap_unite.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Unite Haplotype Summaries with Species Delimitation Outputs — hap_unite","text":"Pedro S. Bittencourt","code":""},{"path":"https://legallab.github.io/delimtools/reference/hap_unite.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Unite Haplotype Summaries with Species Delimitation Outputs — hap_unite","text":"","code":"# get haplotype table hap_tbl <- haplotype_tbl(geophagus) #> Warning: ⚠ You have missing data \"('N','-' '?')\" or ambiguity inside your sequence, i.e. #> not padding the ends, and this may have unintended consequences later, as they #> have now been removed! #> ℹ The names of the samples are bellow. #> GU701784.1, GU701785.1  # unite hap_unite(hap_tbl, geophagus_delims) #> # A tibble: 274 × 12 #>    labels     n_seqs collapsed  abgd  asap  bgmyc gmyc  locmin morph mptp  ptp   #>    <chr>       <dbl> <chr>      <chr> <chr> <chr> <chr> <chr>  <chr> <chr> <chr> #>  1 MZ504318.1     38 MZ504328.… sp1   sp20  sp1   sp1   sp1    sp37  sp38  sp1   #>  2 MZ504540.1     20 MZ504505.… sp16  sp16  sp25  sp27  sp33   sp34  sp16  sp16  #>  3 MZ504420.1     19 MZ504417.… sp3   sp23  sp3   sp32  sp3    sp3   sp23  sp23  #>  4 MZ504488.1     16 MZ504538.… sp16  sp16  sp24  sp24  sp33   sp34  sp16  sp16  #>  5 MZ504484.1     15 MZ504496.… sp16  sp16  sp24  sp24  sp33   sp34  sp16  sp16  #>  6 MZ504462.1     14 MZ504479.… sp6   sp21  sp21  sp21  sp6    sp21  sp21  sp21  #>  7 MZ504375.1     13 MZ504372.… sp2   sp23  sp26  sp26  sp2    sp26  sp23  sp23  #>  8 MZ504535.1      8 MZ504515.… sp16  sp16  sp24  sp24  sp33   sp34  sp16  sp16  #>  9 MZ504393.1      8 MZ504445.… sp3   sp23  sp3   sp31  sp3    sp3   sp23  sp23  #> 10 MZ504400.1      6 MZ504404.… sp3   sp23  sp3   sp32  sp3    sp3   sp23  sp23  #> # ℹ 264 more rows #> # ℹ 1 more variable: status <chr>"},{"path":"https://legallab.github.io/delimtools/reference/haplotype_tbl.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarise Haplotypes Down to One Row — haplotype_tbl","title":"Summarise Haplotypes Down to One Row — haplotype_tbl","text":"haplotype_tbl() returns tbl_df summarising unique haplotype frequencies duplicates single row.","code":""},{"path":"https://legallab.github.io/delimtools/reference/haplotype_tbl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarise Haplotypes Down to One Row — haplotype_tbl","text":"","code":"haplotype_tbl(dna, clean = TRUE, collapseSubstrings = TRUE, verbose = TRUE)"},{"path":"https://legallab.github.io/delimtools/reference/haplotype_tbl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarise Haplotypes Down to One Row — haplotype_tbl","text":"dna object class DNAbin. clean logical. Whether remove remove non ACTG bases alignment. collapseSubstrings logical. Whether collapse collapse shorter identical sequences. verbose logical. Returns warning sequence contains non ACTG bases. See clean_dna details.","code":""},{"path":"https://legallab.github.io/delimtools/reference/haplotype_tbl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarise Haplotypes Down to One Row — haplotype_tbl","text":"object class tbl_df.","code":""},{"path":"https://legallab.github.io/delimtools/reference/haplotype_tbl.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Summarise Haplotypes Down to One Row — haplotype_tbl","text":"haplotype_tbl() uses combination clean_dna hap_collapse summarise haplotypes tibble. row tibble unique haplotype, frequency collapsed duplicates flattened string.","code":""},{"path":"https://legallab.github.io/delimtools/reference/haplotype_tbl.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Summarise Haplotypes Down to One Row — haplotype_tbl","text":"Rupert . Collins, Pedro S. Bittencourt.","code":""},{"path":"https://legallab.github.io/delimtools/reference/haplotype_tbl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarise Haplotypes Down to One Row — haplotype_tbl","text":"","code":"# get haplotype table haplotype_tbl(geophagus)  #> Warning: ⚠ You have missing data \"('N','-' '?')\" or ambiguity inside your sequence, i.e. #> not padding the ends, and this may have unintended consequences later, as they #> have now been removed! #> ℹ The names of the samples are bellow. #> GU701784.1, GU701785.1 #> # A tibble: 137 × 3 #>    labels     n_seqs collapsed                                                   #>    <chr>       <dbl> <chr>                                                       #>  1 MZ504318.1     38 MZ504328.1, MZ504313.1, MZ504311.1, MZ504312.1, MZ504309.1… #>  2 MZ504540.1     20 MZ504505.1, MZ504553.1, MZ504554.1, MZ504552.1, MZ504542.1… #>  3 MZ504420.1     19 MZ504417.1, MZ504437.1, MZ504425.1, MZ504427.1, MZ504422.1… #>  4 MZ504488.1     16 MZ504538.1, KU568830.1, JN026709.1, MZ504522.1, MZ504523.1… #>  5 MZ504484.1     15 MZ504496.1, MZ504487.1, MZ504573.1, MZ504560.1, MZ504497.1… #>  6 MZ504462.1     14 MZ504479.1, MZ504477.1, MZ504481.1, MZ504476.1, MZ504463.1… #>  7 MZ504375.1     13 MZ504372.1, MZ504382.1, MZ504381.1, MZ504379.1, MZ504383.1… #>  8 MZ504535.1      8 MZ504515.1, MZ504525.1, MZ504533.1, MZ504534.1, MZ504536.1… #>  9 MZ504393.1      8 MZ504445.1, MZ504413.1, MZ504407.1, MZ504408.1, MZ504410.1… #> 10 MZ504400.1      6 MZ504404.1, MZ504401.1, MZ504402.1, MZ504403.1, MZ504399.1  #> # ℹ 127 more rows"},{"path":"https://legallab.github.io/delimtools/reference/locmin_tbl.html","id":null,"dir":"Reference","previous_headings":"","what":"Turns Local Minima Results into a Tibble — locmin_tbl","title":"Turns Local Minima Results into a Tibble — locmin_tbl","text":"locmin_tbl() processes output tclust object class tbl_df.","code":""},{"path":"https://legallab.github.io/delimtools/reference/locmin_tbl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Turns Local Minima Results into a Tibble — locmin_tbl","text":"","code":"locmin_tbl(distobj, threshold = 0.01, haps = NULL, delimname = \"locmin\")"},{"path":"https://legallab.github.io/delimtools/reference/locmin_tbl.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Turns Local Minima Results into a Tibble — locmin_tbl","text":"Brown S.D.J., Collins R.., Boyer S., Lefort M.-C., Malumbres-Olarte J., Vink C.J., Cruickshank, R.H. 2012. Spider: R package analysis species identity evolution, particular reference DNA barcoding. Molecular Ecology Resources, 12: 562-565.","code":""},{"path":"https://legallab.github.io/delimtools/reference/locmin_tbl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Turns Local Minima Results into a Tibble — locmin_tbl","text":"distobj distance object (usually dist.dna). threshold Distance cutoff clustering. Default 0.01. See localMinima details. haps Optional. vector haplotypes keep tbl_df. delimname Character. String rename delimitation method table. Default 'locmin'.","code":""},{"path":"https://legallab.github.io/delimtools/reference/locmin_tbl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Turns Local Minima Results into a Tibble — locmin_tbl","text":"object class tbl_df.","code":""},{"path":"https://legallab.github.io/delimtools/reference/locmin_tbl.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Turns Local Minima Results into a Tibble — locmin_tbl","text":"spider package uses localMinima determine possible thresholds distance matrix tclust cluster samples within given threshold species partitions. locmin_tbl() turns inputs tibble matches output gmyc_tbl bgmyc_tbl.","code":""},{"path":"https://legallab.github.io/delimtools/reference/locmin_tbl.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Turns Local Minima Results into a Tibble — locmin_tbl","text":"Samuel Brown.","code":""},{"path":"https://legallab.github.io/delimtools/reference/locmin_tbl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Turns Local Minima Results into a Tibble — locmin_tbl","text":"","code":"# create a distance matrix mat <- ape::dist.dna(geophagus, model = \"raw\", pairwise.deletion = TRUE)  # run Local Minima locmin_res <- spider::localMinima(mat) #> [1] 0.006828358 0.018994392 0.040791871 0.055999413 0.067151612 0.082105695  # create a tibble locmin_df <- locmin_tbl(mat,                          threshold = locmin_res$localMinima[1],                          haps = ape::as.phylo(geophagus_beast)$tip.label)  # check locmin_df  #> # A tibble: 137 × 2 #>    labels     locmin #>    <chr>       <int> #>  1 MZ504301.1      1 #>  2 MZ504318.1      1 #>  3 MZ504341.1      1 #>  4 MZ504337.1      1 #>  5 MZ504342.1      1 #>  6 MZ504304.1      1 #>  7 MZ504332.1      1 #>  8 MZ504343.1      1 #>  9 MZ504315.1      1 #> 10 MZ504345.1      1 #> # ℹ 127 more rows"},{"path":"https://legallab.github.io/delimtools/reference/match_ratio.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Agreement Between Alternative Species Delimitation Partitions — match_ratio","title":"Compute Agreement Between Alternative Species Delimitation Partitions — match_ratio","text":"match_ratio() uses Match Ratio statistic Ahrens et al. (2014) compute agreement pairs species delimitation partitions delim_join output.","code":""},{"path":"https://legallab.github.io/delimtools/reference/match_ratio.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Agreement Between Alternative Species Delimitation Partitions — match_ratio","text":"","code":"match_ratio(delim)"},{"path":"https://legallab.github.io/delimtools/reference/match_ratio.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Compute Agreement Between Alternative Species Delimitation Partitions — match_ratio","text":"Ahrens D., Fujisawa T., Krammer H. J., Eberle J., Fabrizi S., Vogler . P. 2016. Rarity Incomplete Sampling DNA-Based Species Delimitation. Systematic Biology 65 (3): 478-494.","code":""},{"path":"https://legallab.github.io/delimtools/reference/match_ratio.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Agreement Between Alternative Species Delimitation Partitions — match_ratio","text":"delim Output delim_join.","code":""},{"path":"https://legallab.github.io/delimtools/reference/match_ratio.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Agreement Between Alternative Species Delimitation Partitions — match_ratio","text":"object class tbl_df.","code":""},{"path":"https://legallab.github.io/delimtools/reference/match_ratio.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute Agreement Between Alternative Species Delimitation Partitions — match_ratio","text":"match_ratio() iterates species delimitation partitions delim_join output returns tbl_df containing following columns: pairs pairs species delimitation methods analyzed. delim_1 number species partitions method 1. delim_2 number species partitions method 2. n_match number identical species partitions methods 1 2. match_ratio match ratio statistic, 0 indicates agreement pairs species delimitation partitions 1 indicates complete agreement .","code":""},{"path":"https://legallab.github.io/delimtools/reference/match_ratio.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Compute Agreement Between Alternative Species Delimitation Partitions — match_ratio","text":"Pedro S. Bittencourt","code":""},{"path":"https://legallab.github.io/delimtools/reference/match_ratio.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute Agreement Between Alternative Species Delimitation Partitions — match_ratio","text":"","code":"# estimate match ratio statistics match_ratio(geophagus_delims) #> # A tibble: 28 × 5 #>    pairs       delim_1 delim_2 n_match match_ratio #>    <chr>         <int>   <int>   <int>       <dbl> #>  1 abgd-asap        19      14      10        0.61 #>  2 abgd-bgmyc       19      18      14        0.76 #>  3 abgd-gmyc        19      21      12        0.6  #>  4 abgd-locmin      19      21      17        0.85 #>  5 abgd-morph       19      16       9        0.51 #>  6 abgd-mptp        19      11       5        0.33 #>  7 abgd-ptp         19      17      13        0.72 #>  8 asap-bgmyc       14      18      10        0.62 #>  9 asap-gmyc        14      21       9        0.51 #> 10 asap-locmin      14      21       8        0.46 #> # ℹ 18 more rows"},{"path":"https://legallab.github.io/delimtools/reference/min_brlen.html","id":null,"dir":"Reference","previous_headings":"","what":"A function to report the smallest tip-to-tip distances in a phylogenetic tree — min_brlen","title":"A function to report the smallest tip-to-tip distances in a phylogenetic tree — min_brlen","text":"min_brlen() returns table smallest tip--tip distances phylogenetic tree.","code":""},{"path":"https://legallab.github.io/delimtools/reference/min_brlen.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A function to report the smallest tip-to-tip distances in a phylogenetic tree — min_brlen","text":"","code":"min_brlen(tree, n = 5, verbose = TRUE)"},{"path":"https://legallab.github.io/delimtools/reference/min_brlen.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A function to report the smallest tip-to-tip distances in a phylogenetic tree — min_brlen","text":"tree path tree file Newick format, phylogenetic tree object class phylo. n Number distances report (default = 5). verbose Logical whether print result screen (default = TRUE).","code":""},{"path":"https://legallab.github.io/delimtools/reference/min_brlen.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A function to report the smallest tip-to-tip distances in a phylogenetic tree — min_brlen","text":"object class tbl_df","code":""},{"path":"https://legallab.github.io/delimtools/reference/min_brlen.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"A function to report the smallest tip-to-tip distances in a phylogenetic tree — min_brlen","text":"min_brlen() tabulates smallest tip--tip distances phylogenetic tree using cophenetic.phylo prints table screen. useful excluding identical near-identical haplotypes using '–minbr' parameter mPTP.","code":""},{"path":"https://legallab.github.io/delimtools/reference/min_brlen.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"A function to report the smallest tip-to-tip distances in a phylogenetic tree — min_brlen","text":"Rupert . Collins","code":""},{"path":"https://legallab.github.io/delimtools/reference/min_brlen.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A function to report the smallest tip-to-tip distances in a phylogenetic tree — min_brlen","text":"","code":"# estimate minimum branch length from raxml tree min_brlen(ape::as.phylo(geophagus_raxml), n = 5) #>  #>  #> ℹ Printing 5 smallest tip-to-tip distances in a tree with 137 tips ... #>  #>  #> |dist     |  n| #> |:--------|--:| #> |0.000002 | 12| #> |0.000003 |  2| #> |0.000004 |  6| #> |0.000005 |  2| #> |0.001561 |  2|"},{"path":"https://legallab.github.io/delimtools/reference/morph_tbl.html","id":null,"dir":"Reference","previous_headings":"","what":"Generating a Morphological Delimitation Table — morph_tbl","title":"Generating a Morphological Delimitation Table — morph_tbl","text":"morph_tbl() returns species partition hypothesis estimated prior taxonomic identifications supplied user.","code":""},{"path":"https://legallab.github.io/delimtools/reference/morph_tbl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generating a Morphological Delimitation Table — morph_tbl","text":"","code":"morph_tbl(labels, sppVector, delimname = \"morph\")"},{"path":"https://legallab.github.io/delimtools/reference/morph_tbl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generating a Morphological Delimitation Table — morph_tbl","text":"labels Vector unique sequence ID labels. sppVector Vector corresponding morphological species delimitation groups. delimname Character. String rename delimitation method table. Default 'morph'.","code":""},{"path":"https://legallab.github.io/delimtools/reference/morph_tbl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generating a Morphological Delimitation Table — morph_tbl","text":"object class tbl_df.","code":""},{"path":"https://legallab.github.io/delimtools/reference/morph_tbl.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generating a Morphological Delimitation Table — morph_tbl","text":"morph_tbl() uses information species name vector label unique sample number corresponding name.","code":""},{"path":"https://legallab.github.io/delimtools/reference/morph_tbl.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Generating a Morphological Delimitation Table — morph_tbl","text":"Rupert . Collins","code":""},{"path":"https://legallab.github.io/delimtools/reference/morph_tbl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generating a Morphological Delimitation Table — morph_tbl","text":"","code":"# create a tibble morph_df <- morph_tbl(   labels = geophagus_info$gbAccession,   sppVector = geophagus_info$scientificName )  # check morph_df #> # A tibble: 354 × 2 #>    labels     morph #>    <chr>      <int> #>  1 MZ504486.1     1 #>  2 MZ504531.1     1 #>  3 MZ504560.1     1 #>  4 MZ504525.1     1 #>  5 MZ504604.1     1 #>  6 MZ504501.1     1 #>  7 MZ504559.1     1 #>  8 MZ504504.1     1 #>  9 MZ504512.1     1 #> 10 MZ504546.1     1 #> # ℹ 344 more rows"},{"path":"https://legallab.github.io/delimtools/reference/mptp_tbl.html","id":null,"dir":"Reference","previous_headings":"","what":"A Command-Line Interface for mPTP - multi-rate Poisson Tree Processes — mptp_tbl","title":"A Command-Line Interface for mPTP - multi-rate Poisson Tree Processes — mptp_tbl","text":"mptp_tbl() returns species partition hypothesis estimated mPTP software https://github.com/Pas-Kapli/mptp.","code":""},{"path":"https://legallab.github.io/delimtools/reference/mptp_tbl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A Command-Line Interface for mPTP - multi-rate Poisson Tree Processes — mptp_tbl","text":"","code":"mptp_tbl(   infile,   exe = NULL,   outfolder = NULL,   method = c(\"multi\", \"single\"),   minbrlen = 1e-04,   webserver = NULL,   delimname = \"mptp\" )"},{"path":"https://legallab.github.io/delimtools/reference/mptp_tbl.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"A Command-Line Interface for mPTP - multi-rate Poisson Tree Processes — mptp_tbl","text":"Kapli T., Lutteropp S., Zhang J., Kobert K., Pavlidis P., Stamatakis ., Flouri T. 2016. Multi-rate Poisson tree processes single-locus species delimitation maximum likelihood Markov chain Monte Carlo. Bioinformatics 33(11):1630-1638.","code":""},{"path":"https://legallab.github.io/delimtools/reference/mptp_tbl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A Command-Line Interface for mPTP - multi-rate Poisson Tree Processes — mptp_tbl","text":"infile Path tree file Newick format. dichotomous rooted. exe Path mPTP executable. outfolder Path output folder. Default NULL. specified, temporary location used. method algorithm Maximum Likelihood point-estimate used. Available options : single Single-rate PTP model. assumes every species evolved rate. multi Multi-rate mPTP model. assumes species different evolutionary rates. minbrlen Numeric. Branch lengths smaller equal value provided ignored computations. Default 0.0001. Use min_brlenfor fine tuning. webserver .txt file containing mPTP results obtained webserver. Default NULL. delimname Character. String rename delimitation method table. Default 'mptp'.","code":""},{"path":"https://legallab.github.io/delimtools/reference/mptp_tbl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A Command-Line Interface for mPTP - multi-rate Poisson Tree Processes — mptp_tbl","text":"object class tbl_df","code":""},{"path":"https://legallab.github.io/delimtools/reference/mptp_tbl.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"A Command-Line Interface for mPTP - multi-rate Poisson Tree Processes — mptp_tbl","text":"mptp_tbl() relies system invoke mPTP software command-line interface. Hence, must software available executable file system order use function properly. mptp_tbl() saves output files outfolder imports results generated Environment. outfolder provided user, temporary location used. Alternatively, mptp_tbl() can parse file obtained webserver https://mptp.h-.org/.","code":""},{"path":"https://legallab.github.io/delimtools/reference/mptp_tbl.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"A Command-Line Interface for mPTP - multi-rate Poisson Tree Processes — mptp_tbl","text":"Paschalia Kapli, Sarah Lutteropp, Jiajie Zhang, Kassian Kobert, Pavlos Pavlides, Alexandros Stamatakis, Tomáš Flouri.","code":""},{"path":"https://legallab.github.io/delimtools/reference/mptp_tbl.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A Command-Line Interface for mPTP - multi-rate Poisson Tree Processes — mptp_tbl","text":"","code":"# \\donttest{  # get path to phylogram path_to_file <- system.file(\"extdata/geophagus_raxml.nwk\", package = \"delimtools\")  # run mPTP in single threshold mode (PTP) ptp_df <- mptp_tbl(   infile = path_to_file,   exe = \"/usr/local/bin/mptp\",   method = \"single\",   minbrlen = 0.0001,   delimname = \"ptp\",   outfolder = NULL ) #> Error in mptp_tbl(infile = path_to_file, exe = \"/usr/local/bin/mptp\",     method = \"single\", minbrlen = 1e-04, delimname = \"ptp\", outfolder = NULL): Error: Please provide a valid path to the mPTP executable file.  # check ptp_df #> Error: object 'ptp_df' not found  # run mPTP in multi threshold mode (mPTP)  mptp_df <- mptp_tbl(   infile = path_to_file,   exe = \"/usr/local/bin/mptp\",   method = \"single\",   minbrlen = 0.0001,   delimname = \"mptp\",   outfolder = NULL ) #> Error in mptp_tbl(infile = path_to_file, exe = \"/usr/local/bin/mptp\",     method = \"single\", minbrlen = 1e-04, delimname = \"mptp\",     outfolder = NULL): Error: Please provide a valid path to the mPTP executable file.  # check mptp_df #> Error: object 'mptp_df' not found # }"},{"path":"https://legallab.github.io/delimtools/reference/report_delim.html","id":null,"dir":"Reference","previous_headings":"","what":"Report Unique Species Partitions — report_delim","title":"Report Unique Species Partitions — report_delim","text":"report_delim() reports number unique species partitions delim.","code":""},{"path":"https://legallab.github.io/delimtools/reference/report_delim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Report Unique Species Partitions — report_delim","text":"","code":"report_delim(delim, verbose = TRUE)"},{"path":"https://legallab.github.io/delimtools/reference/report_delim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Report Unique Species Partitions — report_delim","text":"delim Output *_tbl() (e.g. gmyc_tbl), delim_join delim_consensus. verbose Logical. TRUE, returns message tabulated summary delim.","code":""},{"path":"https://legallab.github.io/delimtools/reference/report_delim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Report Unique Species Partitions — report_delim","text":"object class tbl_df].","code":""},{"path":"https://legallab.github.io/delimtools/reference/report_delim.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Report Unique Species Partitions — report_delim","text":"column delim, report_delim() calculate number unique partitions print Console. delim output *_tbl(), report_delim() get unique species partitions using vec_unique_count. delim output delim_join delim_consensus, values summarized using n_distinct na.rm = TRUE. prevent columns NA values interpreted species partitions.","code":""},{"path":"https://legallab.github.io/delimtools/reference/report_delim.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Report Unique Species Partitions — report_delim","text":"Rupert . Collins, Pedro S. Bittencourt","code":""},{"path":"https://legallab.github.io/delimtools/reference/report_delim.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Report Unique Species Partitions — report_delim","text":"","code":"# report geophagus delimitations report_delim(geophagus_delims) #> ℹ Joined delimitations have a total of 43 unique species partitions. #> ℹ Check below the number of species partitions per method: #>  #>  #> |method | partitions| #> |:------|----------:| #> |gmyc   |         21| #> |locmin |         21| #> |abgd   |         19| #> |bgmyc  |         18| #> |ptp    |         17| #> |morph  |         16| #> |asap   |         14| #> |mptp   |         11| #> # A tibble: 137 × 9 #>    labels     abgd  asap  bgmyc gmyc  locmin morph mptp  ptp   #>    <chr>      <chr> <chr> <chr> <chr> <chr>  <chr> <chr> <chr> #>  1 MZ504301.1 sp1   sp20  sp1   sp1   sp1    sp37  sp38  sp1   #>  2 MZ504318.1 sp1   sp20  sp1   sp1   sp1    sp37  sp38  sp1   #>  3 MZ504341.1 sp1   sp20  sp1   sp1   sp1    sp37  sp38  sp1   #>  4 MZ504337.1 sp1   sp20  sp1   sp1   sp1    sp37  sp38  sp1   #>  5 MZ504342.1 sp1   sp20  sp1   sp1   sp1    sp37  sp38  sp1   #>  6 MZ504304.1 sp1   sp20  sp1   sp1   sp1    sp37  sp38  sp1   #>  7 MZ504332.1 sp1   sp20  sp1   sp1   sp1    sp37  sp38  sp1   #>  8 MZ504343.1 sp1   sp20  sp1   sp1   sp1    sp37  sp38  sp1   #>  9 MZ504315.1 sp1   sp20  sp1   sp1   sp1    sp37  sp38  sp1   #> 10 MZ504345.1 sp1   sp20  sp1   sp1   sp1    sp37  sp38  sp1   #> # ℹ 127 more rows"},{"path":"https://legallab.github.io/delimtools/news/index.html","id":"delimtools-020","dir":"Changelog","previous_headings":"","what":"delimtools 0.2.0","title":"delimtools 0.2.0","text":"Initial CRAN submission.","code":""},{"path":"https://legallab.github.io/delimtools/news/index.html","id":"delimtools-010","dir":"Changelog","previous_headings":"","what":"delimtools 0.1.0","title":"delimtools 0.1.0","text":"Initial release.","code":""}]
