% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/hap_collapse.R
\name{hap_collapse}
\alias{hap_collapse}
\title{Removes Duplicated Sequences from Alignment}
\usage{
hap_collapse(fasta, collapseSubstrings = TRUE, clean = TRUE)
}
\arguments{
\item{fasta}{an object of class \code{\link[ape]{DNAbin}}.}

\item{collapseSubstrings}{logical. Whether to collapse or not collapse shorter but identical sequences.}

\item{clean}{logical. Whether to remove or not remove non ACTG bases from alignment.}
}
\value{
an object of class \code{\link[ape]{DNAbin}}.
}
\description{
\code{hap_collapse()} collapses haplotypes from a \code{\link[ape]{DNAbin}} object,
keeping unique haplotypes only.
}
\details{
\code{hap_collapse()} collapses a \code{\link[ape]{DNAbin}} object, keeping unique
haplotypes only. If \code{collapseSubstrings = TRUE}, the function will consider
shorter but identical sequences as the same haplotype and collapse them, returning the
longest sequence. If \code{collapseSubstrings = FALSE}, the function will consider
shorter but identical sequences as different haplotypes and will keep them.
If \code{clean = TRUE}, the function will call \code{\link[delimtools]{clean_dna}}
to remove any non ACTG bases from alignment prior to collapsing haplotypes. If
\code{clean = FALSE}, the function will treat data as it is, and will not remove any bases.
}
\examples{

# create a vector of DNA sequences
seqs <- c(seq1= "ATGCTAGTTCGC",
          seq2= "ATGCTAGTTCGC",
          seq3= "ATGCTAGTTCGC",
          seq4= "ATGCTAGTTCG-",
          seq5= "ATGCTAGTT---",
          seq6= "ATGCTAGTTCGN",
          seq7= "ATGCTA-TTCGC",
          seq8= "ATGCTA-TTCG-",
          seq9= "ATGCTANTTCGN",
          seq10="ATGCTAGTT")
          
# convert to DNAbin
dummy <- tolower(seqs) |>
 strsplit(split= "") |>
 ape::as.DNAbin.list()
 
# run hap_collapse with different settings

# 2 DNA sequences (seq1/seq7)

}
\author{
Rupert A. Collins
}
